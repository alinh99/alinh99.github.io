{"version":3,"sources":["containers/Background/Background.js","hoc/Axu.js","components/Welcome/Main/LoginForm/Input/Input.js","components/Welcome/Main/LoginForm/Button/Button.js","axios/axios.js","components/Welcome/Spinner/Spinner.js","history/history.js","components/HomePage/SideBar/Item/Item.js","components/HomePage/SideBar/Logo/Logo.js","components/HomePage/Main/TodoMain/TodoMain.js","components/HomePage/Main/AddTodoMain/AddTodoMain.js","components/HomePage/Main/TasklistMain/TasklistMain.js","components/HomePage/Main/Main.js","components/HomePage/SideBar/DisplayTaskList/DisplayTaskList.js","components/HomePage/SideBar/SideBar.js","components/HomePage/NavigationBar/DropMenu/DropMenuItem/DropMenuItem.js","components/HomePage/NavigationBar/DropMenu/DropMenu.js","components/HomePage/NavigationBar/Search/Search.js","components/HomePage/NavigationBar/SayHi/SayHi.js","components/HomePage/NavigationBar/DrawToggle/DrawToggle.js","components/HomePage/NavigationBar/NavigationBar.js","components/HomePage/Backdrop/Backdrop.js","components/HomePage/Modal/Modal.js","components/HomePage/AddTaskListPanel/InputTaskListArea/InputTaskListArea.js","components/HomePage/AddTaskListPanel/SubmitButton/SubmitButton.js","components/HomePage/AddTaskListPanel/AddTaskListPanel.js","components/HomePage/Inbox/Inbox.js","components/HomePage/Share/Tasklist/Row/Row.js","components/HomePage/Share/Tasklist/Tasklist.js","components/HomePage/Share/Share.js","components/HomePage/ShareTasklistPanel/ShareTasklistPanel.js","components/HomePage/WorkPlace/WorkPlace.js","components/HomePage/HomePage.js","components/Welcome/Main/LoginForm/LoginForm.js","components/Welcome/Main/RegisterForm/Input/Input.js","components/Welcome/Main/RegisterForm/Button/Button.js","components/Welcome/Main/RegisterForm/RegisterForm.js","components/Welcome/Main/Main.js","components/Welcome/Welcome.js","containers/AccountAction/AccountAction.js","App.js","serviceWorker.js","index.js"],"names":["Background","className","this","props","children","Component","aux","Input","changeHandler","e","value","target","setData","label","type","onChange","button","onClick","clicked","title","token","store","get","client","uid","instance","axios","create","baseURL","headers","spinner","createBrowserHistory","forceRefresh","item","click","icon","color","number","logo","clickedLogo","TodoMain","useState","check","checked","setChecked","changeTodo","setChangeTodo","name","todoName","setTodoName","todoNameTemporary","settodoNameTemporary","del","setDelete","useEffect","a","patch","tasklistId","id","updateDone","style","display","alignItems","justifyContent","fontFamily","fontWeight","faCheck","cursor","then","res","catch","err","console","log","faEdit","faTimes","delete","AddTodoMain","faPlus","placeholder","TaskListMain","todos","setTodos","loading","setLoading","taskListTemporary","setTaskListTemporary","taskListName","setTaskListName","changeTasklist","setChangeTasklist","todoAddition","setTodoAddition","email","setEmail","partner","setUser","request","data","fetchTodos","fetchData","map","user","user_id","cancelChangeTaskListHandler","addTodoHandler","post","JSON","stringify","opacity","clickDeleteBtn","v","todo","done","edit","faTrashAlt","textAlign","Main","tasklists","taskLists","setTasklist","fetchTaskList","updateData","list","tasklist","Col","lg","Row","DisplayTaskList","tasklistDisplay","fontSize","marginRight","faCircle","SideBar","sideBar","controller","op1","op2","op3","faBook","clickTodo","faHeadphones","shared","clickInBox","faShare","share","clickShare","backgroundColor","border","margin","lineHeight","width","taskListItem","addTasklist","dropMenuItem","dropMenu","faAddressCard","faSignOutAlt","clickedSignOutButton","search","faSearch","sayHi","clickedDropDown","drawToggle","NavigationBar","state","showDropMenu","setState","backDrop","show","cancel","modal","transform","InputTaskListArea","submitButton","AddTaskListPanel","message","setTodo1Name","setTodo2Name","submitHandler","Inbox","is_write","write","setWrite","dele","put","taskListId","putData","task","length","marginBottom","error","Tasklist","setShare","usersList","ob","renameKey","users","reduce","el","obj","old_key","new_key","Object","defineProperty","getOwnPropertyDescriptor","row","s","task_list_id","padding","overflow","maxWidth","Share","lists","taskList","ShareTasklistPanel","submit","correctEmail","correctTaskList","setUserEmail","setTasklistName","bind","disabled","outline","WorkPlace","setTaskLists","setMessage","tasklistName","todo1Name","todo2Name","showAddList","setShowAddList","setShared","setController","showShareList","setShowShareList","setId","editPermission","setEditPermission","setCorrectTaskList","setUsers","setCorrectEmail","taskId","setTaskId","logoutAction","setLogoutAction","share_count","object","push","addTasklistHandler","set","trim","toDo1","toDo2","permission","faShareSquare","isLoggedIn","homePage","LoginForm","password","logined","setPassword","loginHandler","header","history","pathname","response","errors","keyPress","HomePage","handleKeys","onKeyEvent","mes","isRegistered","marginTop","clickedRegisterButton","RegisterForm","firstName","lastName","rightPassword","setFirstname","setLastname","checkConfirm","registerHandler","full_messages","keys","iKeys","Number","i","Array","arr","concat","pressKey","clickedLoginButton","main","showRegisterForm","registered","showLoginForm","successfulRegister","Welcome","showRegisterFormHandler","showLoginFormHandler","loginStep","successful","AccountAction","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"21BAYeA,G,6KARP,OACI,qBAAKC,UAAU,aAAf,SACKC,KAAKC,MAAMC,e,GAJHC,cCCVC,EAFH,SAACH,GAAD,OAAWA,EAAMC,UCuBdG,G,8NAnBXC,cAAgB,SAACC,GACb,IAAIC,EAAQD,EAAEE,OAAOD,MACrB,EAAKP,MAAMS,QAAQF,I,uDAInB,OACI,cAAC,EAAD,UACI,qBAAKT,UAAU,QAAf,SACI,sBAAKA,UAAU,QAAf,UACI,gCAAQC,KAAKC,MAAMU,QACnB,uBAAOC,KAAMZ,KAAKC,MAAMW,KAAMC,SAAUb,KAAKM,2B,GAZjDH,cCMLW,G,YANA,SAACb,GAAD,OACX,cAAC,EAAD,UACI,wBAAQF,UAAWE,EAAMF,UAAWgB,QAASd,EAAMe,QAAnD,SAA6Df,EAAMgB,Y,iCCHrEC,EAAQC,IAAMC,IAAI,gBAClBC,EAASF,IAAMC,IAAI,UACnBE,EAAMH,IAAMC,IAAI,OAWPG,EATEC,IAAMC,OAAO,CAC1BC,QAAS,mCACTC,QAAS,CAAC,cAAgB,gLAChB,IAAM,GAAN,OAASL,GACT,eAAe,GAAf,OAAkBJ,GAClB,OAAS,GAAT,OAAYG,GACZ,eAAgB,sBCHfO,G,MANC,kBACZ,cAAC,EAAD,UACI,sBAAK7B,UAAU,UAAf,UAAyB,wBAAW,wBAAW,wBAAW,+B,QCLnD8B,cAAqB,CAACC,cAAa,I,0ECkBnCC,EAdF,SAAC9B,GAAD,OACT,cAAC,EAAD,UACI,sBAAKF,UAAU,OAAOgB,QAASd,EAAM+B,MAArC,UAEI,qBAAKjC,UAAU,OAAf,SACA,cAAC,IAAD,CAAiBkC,KAAMhC,EAAMgC,KAAMC,MAAOjC,EAAMiC,UAE5C,mBAAGnC,UAAU,QAAb,SAAsBE,EAAMU,QAC5B,mBAAGZ,UAAU,SAAb,SAAuBE,EAAMkC,e,OCI9BC,G,MAbF,SAACnC,GACV,OACI,cAAC,EAAD,UACI,qBAAKF,UAAU,OAAOgB,QAASd,EAAMoC,YAArC,SACI,qBAAKtC,UAAU,oBAAf,gC,MCgFDuC,MAhFf,SAAkBrC,GAAQ,IAAD,EAESsC,mBAAStC,EAAMuC,OAFxB,mBAEdC,EAFc,KAELC,EAFK,OAGeH,oBAAS,GAHxB,mBAGdI,EAHc,KAGFC,EAHE,OAIWL,mBAAStC,EAAM4C,MAJ1B,mBAIdC,EAJc,KAIJC,EAJI,OAK6BR,mBAAStC,EAAM4C,MAL5C,mBAKdG,EALc,KAKKC,EALL,OAMIV,oBAAS,GANb,mBAMdW,EANc,KAMTC,EANS,KAoDrB,OA5CAC,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sEACU7B,EAAM8B,MAAN,sBAA2BrD,EAAMsD,WAAjC,kBAAqDtD,EAAMuD,IAAM,CAAE,KAAO,GAAP,OAAWf,KADxF,4CADY,uBAAC,WAAD,wBAIZgB,KACD,CAAChB,IAwCA,cAAC,EAAD,UAGQS,EAAM,GACF,sBAAKnD,UAAU,WAAf,UACI,qBAAKA,UAAU,mBAAf,SACK4C,EAAa,uBAAO/B,KAAK,OAAOJ,MAAOwC,EAAmBnC,SAxB7D,SAACN,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACrByC,EAAqBzC,IAsBmFT,UAAU,cAC1F,sBAAK2D,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,gBAArE,UACI,uBACIjD,KAAK,WACL6B,QAASA,EACT5B,SAAU,kBAAM6B,GAAYD,MAEhC,uBAAOiB,MAAO,CAAEI,WAAY,UAAWC,WAAY,OAAnD,SAA4DjB,SAIxE,sBAAK/C,UAAU,eAAf,UACK4C,EAAa,cAAC,IAAD,CAAiBV,KAAM+B,IAASN,MAAO,CAAEO,OAAQ,WAAalD,QA/C1E,WACtBS,EAAM8B,MAAN,sBAA2BrD,EAAMsD,WAAjC,kBAAqDtD,EAAMuD,IAAM,CAAE,KAAO,GAAP,OAAWR,KACzEkB,MAAK,SAAAC,GACFvB,GAAc,GACdG,EAAYC,MAEfoB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,SAwC6G,cAAC,IAAD,CAAiBpC,KAAMuC,IAAQd,MAAO,CAAEO,OAAQ,WAAalD,QAxD9K,WAChB6B,GAAc,MAwDOD,EAAa,cAAC,IAAD,CAAiBV,KAAMwC,IAASf,MAAO,CAAEO,OAAQ,WAAalD,QArD1E,WACtB6B,GAAc,GACdK,EAAqBH,MAmD4G,cAAC,IAAD,CAAiBb,KAAMwC,IAASf,MAAO,CAAEO,OAAQ,WAAalD,QAhC/K,WAChBS,EAAMkD,OAAN,sBAA4BzE,EAAMsD,WAAlC,kBAAsDtD,EAAMuD,KACvDU,MAAK,SAAAC,GACFhB,GAAU,MAEbiB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,kB,YC9BbM,MAjBf,SAAqB1E,GAOjB,OACI,cAAC,EAAD,UACI,sBAAKF,UAAU,cAAf,UACI,cAAC,IAAD,CAAiBkC,KAAM2C,IAAQ7D,QAASd,EAAM+B,MAAOjC,UAAU,mBAC/D,uBAAOA,UAAU,WAAWa,KAAK,OAAOiE,YAAY,WAAWhE,SATrD,SAACN,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBP,EAAMS,QAAQF,IAOkFA,MAAOP,EAAMO,c,MCwJtGsE,MA/Jf,SAAsB7E,GAAQ,IAAD,EAECsC,mBAAS,IAFV,mBAElBwC,EAFkB,KAEXC,EAFW,OAGKzC,oBAAS,GAHd,mBAGlB0C,EAHkB,KAGTC,EAHS,OAIyB3C,mBAAStC,EAAM4C,MAJxC,mBAIlBsC,EAJkB,KAICC,EAJD,OAKe7C,mBAAStC,EAAM4C,MAL9B,mBAKlBwC,EALkB,KAKJC,EALI,OAMmB/C,oBAAS,GAN5B,mBAMlBgD,EANkB,KAMFC,EANE,OAODjD,mBAAS,IAPR,gCAQeA,mBAAS,KARxB,mBAQlBkD,EARkB,KAQJC,EARI,OASCnD,mBAAS,IATV,mBASlBoD,EATkB,KASXC,EATW,OAUKrD,oBAAS,GAVd,mBAUlBsD,EAVkB,aAWqBtD,oBAAS,IAX9B,gCAYSA,mBAAS,KAZlB,gCAaDA,mBAAS,KAbR,mBAaZuD,GAbY,WAqBzB1C,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAN,sBAA6B9F,EAAMuD,GAAnC,WAF9B,OAEcuC,EAFd,OAGQf,EAASe,EAAQC,MAHzB,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ0B,KACF,CAAChB,IAEH7B,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,UAF5C,OAEcA,EAFd,OAGQD,EAAQC,EAAQC,MAHxB,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBAUZ2B,KACF,IAEF9C,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,UAF5C,OAEcA,EAFd,OAGsBA,EAAQC,KAChBG,KAAI,SAAAC,GACGA,EAAK5C,KACJvD,EAAMoG,SACZT,EAASQ,EAAKT,UAP9B,gDAWQrB,QAAQC,IAAR,MAXR,0DADY,uBAAC,WAAD,wBAeZ2B,KACD,IAEH,IAeMI,EAA8B,SAACzD,GACjC2C,GAAkB,GAClBJ,EAAqBC,IAGnBkB,EAAiB,SAAC/C,GACA,KAAjBiC,IAGCP,GAAW,GACX1D,EAAMgF,KAAN,sBAA0BhD,EAA1B,UAAsCiD,KAAKC,UAAU,CAAC,KAAO,GAAP,OAAWjB,MAChEvB,MAAK,SAAAC,GACFuB,EAAgB,IAChBR,GAAW,MAEdd,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAKxB,OACI,cAAC,EAAD,UACI,sBAAKtE,UAAU,eAAf,UACI,sBAAKA,UAAU,mBAAf,UACKwF,EAAiB,uBAAO3E,KAAK,OAAO8C,MAAO,CAACiD,QAAQ,KAAMnG,MAAO2E,EAAmBtE,SAzF/E,SAACN,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACrB4E,EAAqB5E,MAuFyG,oBAAIkD,MAAO,CAACiD,QAAS,KAArB,SAA4BtB,IAE9I,sBAAKtF,UAAU,uBAAf,UACKwF,EAAiB,cAAC,IAAD,CAAiBtD,KAAM+B,IAASjD,QA3C1C,WACxBS,EAAM8B,MAAN,sBAA2BrD,EAAMuD,IAAM,CAAC,KAAO,GAAP,OAAU2B,KACjDjB,MAAK,SAAAC,GACFqB,GAAkB,GAClBF,EAAgBH,MAEnBf,OAAM,SAAAC,GACHC,QAAQC,IAAIF,SAoCoF,cAAC,IAAD,CAAiBpC,KAAMuC,IAAQzD,QAhCzG,WAC1ByE,GAAkB,MAgCDD,EAAiB,cAAC,IAAD,CAAiBtD,KAAMwC,IAAS1D,QAASuF,IAAiC,cAAC,IAAD,CAAiBrE,KAAMwC,IAAS1D,QAASuF,EAA6B5C,MAAO,CAACC,QAAQ,UACjL4B,EAAiB,cAAC,IAAD,CAAiBtD,KAAMwC,IAASvC,MAAM,MAAMwB,MAAO,CAACC,QAAQ,UAAa,cAAC,IAAD,CAAiB1B,KAAMwC,IAAS1D,QAASd,EAAM2G,uBAGlJ,oBACAC,GAAC,EAAC9G,UAAU,YADZ,SAGQgF,EAAMoB,KAAI,SAAAW,GACN,OAAO,cAAC,EAAD,CACCtE,MAAOsE,EAAKC,KACZlE,KAAMiE,EAAKjE,KACXW,GAAIsD,EAAKtD,GAAKsD,EAAKjE,KAEnBU,WAAYtD,EAAMuD,IADbvD,EAAMuD,SAK9BvD,EAAM+G,KACP,gCACA,8BACI,cAAC,EAAD,CACItG,QAASgF,EACT1D,MAAO,kBAAMuE,EAAetG,EAAMuD,KAClChD,MAAOiF,MAGf,oBAAI/B,MAAO,CAACiD,QAAQ,KAApB,gDAEA,gCACA,sBAAKjD,MAAO,CAACiD,QAAQ,KAArB,UACI,cAAC,EAAD,CACIjG,QAASgF,EACT1D,MAAO,kBAAMuE,EAAetG,EAAMuD,KAClChD,MAAOiF,IACX,qBAAK1F,UAAU,YAAf,SACI,cAAC,IAAD,CACIkC,KAAMgF,IACN/E,MAAM,MACNnB,QAASd,EAAM2G,sBAG3B,oBAAIlD,MAAO,CAACiD,QAAQ,KAApB,gDAEC1G,EAAMoG,QAAU,qBAAI3C,MAAO,CAACwD,UAAU,SAAUhF,MAAM,SAAtC,uBAA2DyD,KAAc,KACzFE,EAAU,qBAAInC,MAAO,CAACwD,UAAU,SAAUhF,MAAM,SAAtC,0BAA8D2D,KAAgB,W,0BC1F1FsB,MAhEf,SAAclH,GAAO,IAAD,EAEiBsC,mBAAS,CAACtC,EAAMmH,YAFjC,mBAETC,EAFS,KAEEC,EAFF,OAGc/E,oBAAS,GAHvB,mBAGT0C,EAHS,KAGAC,EAHA,KAKhB9B,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,eAF5C,OAEcA,EAFd,OAGQuB,EAAYvB,EAAQC,MAH5B,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZgD,KACD,CAACtC,IAEJ7B,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,sDACIiE,EAAYrH,EAAMmH,WADtB,4CADY,uBAAC,WAAD,wBAIZI,KACD,CAACvH,EAAMmH,YAEV,IAYMK,EAAOJ,EAAUlB,KAAI,SAAAuB,GACvB,OAAQ,cAACC,EAAA,EAAD,CACIC,GAAI,EADR,SAIQ,cAAC,EAAD,CACI/E,KAAM6E,EAAS7E,KACfW,GAAIkE,EAASlE,GAEboD,eAAgB,kBArBTpD,EAqBqCkE,EAASlE,GApBzE0B,GAAW,QACX1D,EAAMkD,OAAN,sBAA4BlB,IAC3BU,MAAK,SAAAC,GACFe,GAAW,MAEdd,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAPU,IAACb,GAsBPwD,MAAM,GAFDU,EAASlE,GAAGkE,EAAS7E,OAL7B6E,EAASlE,OAW9B,OACI,cAAC,EAAD,UACI,sBAAKzD,UAAU,cAAf,UACKE,EAAMC,SACP,qBAAKH,UAAU,eAAf,SACI,cAAC8H,EAAA,EAAD,UACKJ,Y,MChCVK,MA5Bf,SAA0B7H,GAEtB,IAEM8H,EAFY9H,EAAMmH,UAEUjB,KAAI,SAAAuB,GAClC,OACI,sBAAK3H,UAAU,iBAAf,UACI,qBAAK2D,MAAO,CAACsE,SAAS,MAAOC,YAAa,QAA1C,SACI,cAAC,IAAD,CAAiBhG,KAAMiG,IAAUhG,MAAM,UAE3C,4BAAIwF,EAAS7E,aAKzB,OACI,sBAAK9C,UAAU,aAAf,UACKgI,EACD,sBAAKhI,UAAU,WAAWgB,QAASd,EAAMe,QAAzC,UACI,qBAAK0C,MAAO,CAACsE,SAAS,OAAQC,YAAY,QAA1C,SACI,cAAC,IAAD,CAAiBhG,KAAM2C,QAE3B,+CCoDDuD,E,4MAjEXC,QAAU,SAAAC,GAAU,OAAI,WAMD,IAAfA,IACM,GACA,GAEgB,IAAfA,IACD,GACA,KAGA,GACA,K,uDAOJ,IAAD,EACoBrI,KAAKC,MAAtBqI,EADH,EACGA,IAAKC,EADR,EACQA,IAAKC,EADb,EACaA,IAClB,OACI,cAAC,EAAD,UACI,qBAAKzI,UAAU,UAAf,SACI,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,CAAMsC,YAAarC,KAAKC,MAAMoC,cAC7BiG,EAAM,cAAC,EAAD,CAAMrG,KAAMwG,IAAQ9H,MAAM,QAAQwB,OAAQnC,KAAKC,MAAMmH,UAAWlF,MAAM,OAAOF,MAAOhC,KAAKC,MAAMyI,YAAgB,cAAC,EAAD,CAAMzG,KAAMwG,IAAQ9H,MAAM,QAAQwB,OAAQnC,KAAKC,MAAMmH,UAAWlF,MAAM,QAAQF,MAAOhC,KAAKC,MAAMyI,YACrNH,EAAM,cAAC,EAAD,CAAMtG,KAAM0G,IAAchI,MAAM,UAAUwB,OAAQnC,KAAKC,MAAM2I,OAAQ1G,MAAM,OAAOF,MAAOhC,KAAK6I,aAAiB,cAAC,EAAD,CAAM5G,KAAM0G,IAAchI,MAAM,UAAUwB,OAAQnC,KAAKC,MAAM2I,OAAQ1G,MAAM,QAAQF,MAAOhC,KAAKC,MAAM4I,aAC1NL,EAAM,cAAC,EAAD,CAAMvG,KAAM6G,IAASnI,MAAM,QAAQwB,OAAQnC,KAAKC,MAAM8I,MAAO7G,MAAM,OAAOF,MAAOhC,KAAKC,MAAM+I,aAAiB,cAAC,EAAD,CAAM/G,KAAM6G,IAASnI,MAAM,QAAQwB,OAAQnC,KAAKC,MAAM8I,MAAO7G,MAAM,QAAQF,MAAOhC,KAAKC,MAAM+I,aACjN,uBACA,uBACA,oBAAItF,MAAO,CACPuF,gBAAiB,OACjBC,OAAQ,mBACRC,OAAQ,SACRC,WAAY,QACZC,MAAO,SAGX,cAAC,EAAD,CACIjC,UAAWpH,KAAKC,MAAMqJ,aACtBtI,QAAShB,KAAKC,MAAMsJ,2B,GAhD9BpJ,aCGPqJ,G,kBATM,SAACvJ,GAAD,OACjB,cAAC,EAAD,UACI,sBAAKF,UAAU,eAAegB,QAASd,EAAMe,QAA7C,UACI,cAAC,IAAD,CAAiBiB,KAAMhC,EAAMgC,OAC7B,4BAAIhC,EAAMU,eCKP8I,EATE,SAACxJ,GAAD,OACb,cAAC,EAAD,UACI,sBAAKF,UAAU,WAAf,UACI,cAAC,EAAD,CAAcY,MAAM,UAAUsB,KAAMyH,MACpC,cAAC,EAAD,CAAc/I,MAAM,UAAUsB,KAAM0H,IAAc3I,QAASf,EAAM2J,6BCM9DC,G,OATA,SAAC5J,GAAD,OACX,cAAC,EAAD,UACI,sBAAKF,UAAU,SAAf,UACQ,cAAC,IAAD,CAAiBkC,KAAM6H,IAAU5H,MAAM,UACvC,uBAAOtB,KAAK,OAAOiE,YAAY,+BCChCkF,G,OARD,SAAA9J,GAAK,OACf,cAAC,EAAD,UACI,qBAAKF,UAAU,QAAf,SACI,qBAAKA,UAAU,OAAOgB,QAASd,EAAM+J,gBAArC,SAAuD/J,EAAM4C,aCO1DoH,G,OAVI,SAAChK,GAAD,OACf,cAAC,EAAD,UACI,sBAAKF,UAAU,eAAegB,QAASd,EAAMe,QAA7C,UACI,wBACA,wBACA,+BC0BGkJ,E,4MA1BXC,MAAQ,CACJC,cAAc,G,EAElBA,aAAe,WACX,EAAKC,SAAS,CACVD,cAAe,EAAKD,MAAMC,gB,uDAI9B,OACI,cAAC,EAAD,UACI,sBAAKrK,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAMA,UAAU,KAAhB,kBAAgC,cAAC,EAAD,CAAOiK,gBAAiBhK,KAAKoK,eAC5DpK,KAAKmK,MAAMC,aAAe,cAAC,EAAD,CAAUR,qBAAsB5J,KAAKC,MAAM2J,uBAA0B,Y,GAhBxFzJ,aCEbmK,G,cANE,SAACrK,GAAD,OACb,cAAC,EAAD,UACKA,EAAMsK,KAAO,qBAAKxK,UAAU,WAAWgB,QAASd,EAAMuK,SAAiB,SCcjEC,EAfD,SAACxK,GAAD,OACV,eAAC,EAAD,WACI,cAAC,EAAD,CACIsK,KAAMtK,EAAMsK,KACZC,OAAQvK,EAAMuK,SAClB,qBACAzK,UAAU,QACV2D,MAAO,CAACgH,UAAWzK,EAAMsK,KAAO,gBAAiB,qBACzC5D,QAAS1G,EAAMsK,KAAO,IAAM,KAHpC,SAKKtK,EAAMC,e,cCOJyK,MAlBf,SAA4B1K,GAKxB,OACI,cAAC,EAAD,UACI,sBAAKF,UAAU,oBAAf,UACI,gCAAQE,EAAM4C,OACd,uBAAOjC,KAAK,OAAOC,SART,SAACN,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBP,EAAMS,QAAQF,YCCPoK,I,OALM,SAAC3K,GAAD,OACjB,mBAAGF,UAAU,kBAAkBgB,QAASd,EAAM+B,MAA9C,sBCoBW6I,OAjBf,SAA2B5K,GAEvB,OACI,cAAC,EAAD,UACI,sBAAKF,UAAU,mBAAf,UACI,+CACCE,EAAM6K,QAAU,mBAAGpH,MAAO,CAACxB,MAAM,OAAjB,6CAA+D,KAChF,cAAC,EAAD,CAAmBW,KAAK,WAAWnC,QAAST,EAAMqF,kBAClD,cAAC,EAAD,CAAmBzC,KAAK,SAASnC,QAAST,EAAM8K,eAChD,cAAC,EAAD,CAAmBlI,KAAK,SAASnC,QAAST,EAAM+K,eAChD,cAAC,GAAD,CAAchJ,MAAO/B,EAAMgL,gBACzBhL,EAAMgF,QAAU,qBAAKlF,UAAU,mBAAf,SAAkC,cAAC,EAAD,MAAmB,W,OC8BxEmL,OAzCf,SAAejL,GAAO,IAAD,EACgBsC,mBAAS,CAACtC,EAAMmH,YADhC,mBACVC,EADU,KACCC,EADD,KAGjBlE,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,WAF5C,OAEcA,EAFd,OAGQuB,EAAYvB,EAAQC,MAH5B,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ2B,KACD,IAEH,IAAMuB,EAAOJ,EAAUlB,KAAI,SAAAuB,GACvB,OAAO,cAACC,EAAA,EAAD,CACKC,GAAI,EADT,SAGS,cAAC,EAAD,CACI/E,KAAM6E,EAAS7E,KACfW,GAAIkE,EAASlE,GAEbwD,KAAMU,EAASyD,SACf9E,QAASqB,EAASrB,SAFbqB,EAASlE,GAAGkE,EAAS7E,OAJ7B6E,EAASlE,OAU9B,OACI,cAAC,EAAD,UACI,qBAAKzD,UAAU,cAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAAC8H,EAAA,EAAD,UACKJ,W,SCyCVI,OA1Ef,SAAa5H,GAAQ,IAAD,EAEUsC,mBAAStC,EAAMkL,UAFzB,mBAETC,EAFS,KAEFC,EAFE,OAGU9I,oBAAS,GAHnB,mBAGT+I,EAHS,KAGHnI,EAHG,OAIUZ,mBAAS,IAJnB,mBAITwC,EAJS,KAIFC,EAJE,KAKVoB,EAAOnG,EAAMmG,KAEnBhD,qBAAU,WAAM,4CACZ,sBAAAC,EAAA,+EAEc7B,EAAM+J,IAAN,sBAAyBtL,EAAMuL,WAA/B,kBAAmDvL,EAAMoG,SAAW,CAAC,WAAa,CAAC,SAAW,GAAX,OAAe+E,MAFhH,sDAIQ9G,QAAQC,IAAR,MAJR,yDADY,uBAAC,WAAD,wBAQZkH,KACF,CAACL,IAEHhI,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAN,sBAA6B9F,EAAMuL,WAAnC,WAF9B,OAEczF,EAFd,OAGQf,EAASe,EAAQC,MAHzB,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ0B,KACF,CAAChG,EAAMuL,aAET,IASIE,EAAQ,sBAAK3L,UAAU,eAAe2D,MAAO,CAAC2F,MAAM,QAASF,OAAO,QAA5D,UACZ,qBAAKpJ,UAAU,mBAAf,SACI,+BAAKE,EAAM4C,KAAX,KAAkB,uBAAMa,MAAO,CAACxB,MAAM,QAAS8F,SAAS,QAAtC,cAAiDjD,EAAM4G,OAAvD,YAEtB,qBAAK5L,UAAU,YAAf,SAEQgF,EAAMoB,KAAI,SAAAW,GACN,OAAO,cAAC,EAAD,CACCtE,MAAOsE,EAAKC,KACZlE,KAAMiE,EAAKjE,KACXW,GAAIsD,EAAKtD,GAETD,WAAYtD,EAAMuD,IADbvD,EAAMuD,SAK/B,sBAAME,MAAO,CAACxB,MAAM,MAAO0J,aAAa,QAAxC,SAAkDxF,EAAKnG,EAAMuD,MAC7D,sBAAKE,MAAO,CAACC,QAAQ,OAAQC,WAAW,SAAUC,eAAe,eAAgBwF,MAAM,SAAvF,UACQ,uBACIzI,KAAK,WACL6B,QAAS2I,EACTvK,SAAU,kBAAMwK,GAAUD,MAC9B,uBAAO1H,MAAO,CAACI,WAAY,UAAWC,WAAW,OAAjD,gCAER,qBAAKhE,UAAU,YAAf,SACQ,cAAC,IAAD,CACIkC,KAAMgF,IACN/E,MAAM,MACNnB,QArCQ,WAChB,IACIS,EAAMkD,OAAN,qBAA2BzE,EAAMuL,WAAjC,kBAAqDvL,EAAMoG,UAC3DlD,GAAU,GACZ,MAAO0I,GACLvH,QAAQC,IAAIsH,YAmCpB,OACIP,EAAO,KAAMI,GCHNI,OAtEf,SAAkB7L,GAAQ,IAAD,EAEGsC,mBAAS,IAFZ,mBAEd6D,EAFc,KAERN,EAFQ,OAGKvD,mBAAS,IAHd,mBAGdwG,EAHc,KAGPgD,EAHO,KAKrB3I,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAN,sBAA6B9F,EAAMuD,GAAnC,WAF9B,OAEcuC,EAFd,OAGQgG,EAAShG,EAAQC,MAHzB,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ2B,KACF,IAEF9C,qBAAU,WAAM,4CACZ,kCAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,UAF5C,OAEcA,EAFd,OAGciG,EAAYjG,EAAQC,KACpByB,EAAOuE,EAAU7F,KAAI,SAAAC,GACvB,IAAI5C,EAAK4C,EAAK5C,GAERyI,EAAK,CAACzI,GADA4C,EAAKT,OAGjB,OADAuG,EAAUD,EAAI,KAAMzI,GACbyI,KAELE,EAAQ1E,EAAK2E,QAAO,SAACH,EAAII,GAC3B,OAAO,6BAAIJ,GAAOI,MAEtBvG,EAAQqG,GAdhB,kDAgBQ7H,QAAQC,IAAR,MAhBR,2DADY,uBAAC,WAAD,wBAoBZ2B,KACF,IAEF,IAAMgG,EAAY,SAACI,EAAKC,EAASC,GAErBD,IAAYC,IACbC,OAAOC,eAAeJ,EAAKE,EAE3BC,OAAOE,yBAAyBL,EAAKC,WAC9BD,EAAIC,KAIZK,EAAM7D,EAAM5C,KAAI,SAAA0G,GAClB,OAAO,cAAC,GAAD,CAEKzG,KAAMA,EACN5C,GAAIqJ,EAAExG,QACNmF,WAAYqB,EAAEC,aACd3B,SAAU0B,EAAE1B,SACZtI,KAAM5C,EAAM4C,KACZwD,QAASwG,EAAExG,SANNwG,EAAExG,YAS3B,OACI,cAAC,EAAD,UACI,qBAAK3C,MAAO,CAACkI,aAAa,OAAQmB,QAAQ,OAAQpJ,QAAQ,OAAQqJ,SAAS,SAAUC,SAAS,UAA9F,SACKL,OCnCFM,OA5Bf,SAAejN,GAAO,IAAD,EACgBsC,mBAAS,CAACtC,EAAMmH,YADhC,mBACVC,EADU,KAOX8F,GAPW,KAGJ9F,EAAU+E,QAAO,SAAAgB,GAC1B,OAAOA,KAGQjH,KAAI,SAAAsB,GACnB,OAAO,8BAES,cAAC,GAAD,CACI5E,KAAM4E,EAAK5E,KACXW,GAAIiE,EAAKjE,IACJiE,EAAKjE,GAAGiE,EAAK5E,OAJrB4E,EAAKjE,QAQ1B,OACI,cAAC,EAAD,UACI,qBAAKzD,UAAU,cAAf,SACI,qBAAKA,UAAU,eAAf,SACSoN,S,OCoBVE,OAvCf,SAA4BpN,GAExB,IAAIqN,GAAS,EAWb,OAJGrN,EAAMsN,cAAgBtN,EAAMuN,kBAC3BF,GAAS,GAIT,cAAC,EAAD,UACA,sBAAKvN,UAAU,sCAAf,UACQ,iDACCE,EAAM6K,QAAU,mBAAGpH,MAAO,CAACxB,MAAM,OAAjB,6CAA+D,KAChF,sBAAKwB,MAAO,CAACC,QAAQ,OAAQE,eAAe,gBAAiBD,WAAW,UAAxE,UACI,cAAC,EAAD,CAAmBf,KAAK,aAAanC,QAAST,EAAMwN,eACnDxN,EAAMsN,aAAe,cAAC,IAAD,CAAiBtL,KAAM+B,IAAS9B,MAAM,YAAc,cAAC,IAAD,CAAiBD,KAAMwC,IAASvC,MAAM,eAEpH,sBAAKwB,MAAO,CAACC,QAAQ,OAAQE,eAAe,gBAAiBD,WAAW,UAAxE,UACI,cAAC,EAAD,CAAmBf,KAAK,gBAAgBnC,QAAST,EAAMyN,kBACtDzN,EAAMuN,gBAAkB,cAAC,IAAD,CAAiBvL,KAAM+B,IAAS9B,MAAM,YAAc,cAAC,IAAD,CAAiBD,KAAMwC,IAASvC,MAAM,eAEvH,sBAAKwB,MAAO,CAACC,QAAQ,OAAQC,WAAW,SAAUC,eAAe,iBAAkBhD,SAtBzE,SAACN,GACnB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBP,EAAMS,QAAQF,IAoBqGmN,KAAK3N,MAAhH,UACI,oDACA,uBAAOY,KAAK,QAAQJ,MAAM,SAASqC,KAAK,SAF5C,SAGI,uBAAOjC,KAAK,QAAQJ,MAAM,UAAUqC,KAAK,SAH7C,aAKA,wBAAQ9B,QAASd,EAAMgL,cAAe2C,UAAWN,EAAQ5J,MAAO,CAAC2F,MAAM,MAAO0D,QAAQ,MAAO9D,gBAAgB,UAAW/G,MAAM,QAAS2L,QAAQ,OAAQ3E,OAAO,QAA9J,oBACEjJ,EAAMgF,QAAU,qBAAKlF,UAAU,mBAAf,SAAkC,cAAC,EAAD,MAAmB,WCwTxE+N,OA7Uf,SAAmB7N,GAAQ,IAAD,EAEYsC,mBAAS,IAFrB,mBAEf8E,EAFe,KAEJ0G,EAFI,OAGQxL,oBAAS,GAHjB,mBAGfuI,EAHe,KAGNkD,EAHM,OAIQzL,oBAAS,GAJjB,mBAIf0C,EAJe,KAINC,EAJM,OAKkB3C,mBAAS,IAL3B,mBAKf0L,EALe,KAKDP,EALC,OAMYnL,mBAAS,IANrB,mBAMf2L,EANe,KAMJnD,EANI,OAOYxI,mBAAS,IAPrB,mBAOf4L,EAPe,KAOJnD,EAPI,OAQgBzI,oBAAS,GARzB,mBAQf6L,EARe,KAQFC,EARE,OASkB9L,mBAAS,IAT3B,gCAUMA,mBAAS,KAVf,mBAUfqG,EAVe,KAUP0F,EAVO,OAWI/L,mBAAS,IAXb,mBAWfwG,EAXe,KAWRgD,EAXQ,OAYcxJ,mBAAS,GAZvB,oBAYf8F,GAZe,MAYHkG,GAZG,SAaoBhM,oBAAS,GAb7B,qBAafiM,GAbe,MAaAC,GAbA,SAckBlM,mBAAS,IAd3B,qCAeFA,mBAAS,KAfP,qBAefiB,GAfe,MAeXkL,GAfW,SAgBsBnM,oBAAS,GAhB/B,qBAgBfoM,GAhBe,MAgBCC,GAhBD,SAiBwBrM,oBAAS,GAjBjC,qBAiBfiL,GAjBe,MAiBEqB,GAjBF,SAkBItM,mBAAS,IAlBb,qBAkBf4J,GAlBe,MAkBR2C,GAlBQ,SAmBkBvM,oBAAS,GAnB3B,qBAmBfgL,GAnBe,MAmBDwB,GAnBC,SAoBMxM,mBAAS,IApBf,qBAoBfyM,GApBe,MAoBPC,GApBO,SAqBkB1M,oBAAS,GArB3B,qCAsBkBA,oBAAS,IAtB3B,qBAsBf2M,GAtBe,MAsBDC,GAtBC,MAyBtB/L,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,eAF5C,OAEcA,EAFd,OAGQgI,EAAahI,EAAQC,MAH7B,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZgD,KACD,CAACtC,IAEJ7B,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,eAF5C,OAEcA,EAFd,OAGQgI,EAAahI,EAAQC,MAH7B,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZgD,KACD,IAEHnE,qBAAU,WAAM,4CACZ,gCAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,eAF5C,OAEcA,EAFd,OAGcqH,EAAWrH,EAAQC,KACnB+C,EAAQ,GACdqE,EAASjH,KAAI,SAAAiH,GACT,GAA6B,IAAzBA,EAASgC,YAAmB,CAC5B,IAAIC,EAAS,CAAE7L,GAAI4J,EAAS5J,GAAIX,KAAMuK,EAASvK,MAC/CkG,EAAMuG,KAAKD,OAGnBtD,EAAShD,GAXjB,kDAaQzE,QAAQC,IAAR,MAbR,2DADY,uBAAC,WAAD,wBAiBZ2B,KACD,CAACjB,IAEJ7B,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,WAF5C,OAEcA,EAFd,OAGQuI,EAAUvI,EAAQC,MAH1B,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ2B,KACD,IAEH9C,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE8B7B,EAAMuE,QAAQ,UAF5C,OAEcA,EAFd,OAGQ+I,GAAS/I,EAAQC,MAHzB,gDAKQ1B,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZ2B,KACD,IAEH,IA0IMqJ,GAAqB,WACvBlB,GAAe,IAgCnB,OACI,cAAC,EAAD,UACKa,GAAe,cAAC,GAAD,IAEZ,sBAAKnP,UAAU,YAAf,UACA,cAAC,EAAD,CACI2I,UArKS,WACrB6F,GAAc,IAqKF1F,WAlKU,WACtB0F,GAAc,IAkKFvF,WA/JU,WACtBuF,GAAc,IA+JFnH,UAAWC,EAAUsE,OACrB5C,MAAOA,EAAM4C,OACb/C,OAAQA,EAAO+C,OACftD,WAAYA,GACZhG,YAhLI,aAiLJiH,aAAcjC,EACdkC,YAAagG,KAEjB,sBAAKxP,UAAU,aAAf,UACI,cAAC,EAAD,CACI6J,qBA9LL,WACXzI,IAAMqO,IAAI,cAAc,GACxBrO,IAAMqO,IAAI,eAAgB,IAC1BrO,IAAMqO,IAAI,MAAO,IACjBrO,IAAMqO,IAAI,SAAU,IACpBL,IAAgB,MA0LY,IAAf9G,GAAoB,eAAC,EAAD,CACjBjB,UAAWC,EADM,UAEjB,cAAC,EAAD,CACIkD,KAAM6D,EACN5D,OA/DS,WAC7BtF,GAAW,GACX8I,GAAW,GACXK,GAAe,IA0DC,SAGI,cAAC,GAAD,CACI/I,gBA7KH,SAAC8H,GACtBM,EAAgBN,EAASqC,SA6KD1E,aA1KX,SAAC2E,GACd3E,EAAa2E,EAAMD,SA0KKzE,aAvKX,SAAC2E,GACd3E,EAAa2E,EAAMF,SAuKKxE,cA9HN,WAClB/F,GAAW,GACU,KAAjB+I,GACAD,GAAW,GACX9I,GAAW,IAEX1D,EAAMgF,KAAK,cAAeC,KAAKC,UAAU,CAAE,KAAO,GAAP,OAAWuH,MACjD/J,MAAK,SAAAC,GACF,IAAMX,EAAKW,EAAI6B,KAAKxC,GACpB,GAAkB,KAAd0K,EAAkB,CAClB,GAAkB,KAAdC,EAIA,OAHAjJ,GAAW,GACX8I,GAAW,QACXK,GAAe,GAGf7M,EAAMgF,KAAN,sBAA0BhD,EAA1B,UAAsCiD,KAAKC,UAAU,CAAE,KAAO,GAAP,OAAWyH,MAC7DjK,MAAK,SAAAC,GACFe,GAAW,GACX8I,GAAW,GACXK,GAAe,MAElBjK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,WAIxB7C,EAAMgF,KAAN,sBAA0BhD,EAA1B,UAAsCiD,KAAKC,UAAU,CAAE,KAAO,GAAP,OAAWwH,MAC7DhK,MAAK,SAAAC,GACF,GAAkB,KAAdgK,EAIA,OAHAjJ,GAAW,GACX8I,GAAW,QACXK,GAAe,GAGf7M,EAAMgF,KAAN,sBAA0BhD,EAA1B,UAAsCiD,KAAKC,UAAU,CAAE,KAAO,GAAP,OAAWyH,MAC7DjK,MAAK,SAAAC,GACFe,GAAW,GACX8I,GAAW,GACXK,GAAe,MAElBjK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,SAI3BD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,SAI3BD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OA2EAY,QAASA,EACT6F,QAASA,MAEjB,cAAC,EAAD,CACIP,KAAMiE,GACNhE,OA5DW,WAC/BtF,GAAW,GACX8I,GAAW,GACXS,IAAiB,GACjBI,IAAmB,GACnBE,IAAgB,GAChBL,GAAM,IACNE,IAAkB,GAClBK,GAAU,KAkDM,SAGI,cAAC,GAAD,CACIxB,aA1JP,SAAC9H,IACG,IAAjB4H,IACAwB,IAAgB,GAEpB5C,GAAMhG,KAAI,SAAAC,GACFA,EAAKT,QAAUA,IACfoJ,IAAgB,GAChBL,GAAMtI,EAAK5C,SAoJKkK,gBAzKN,SAACN,GACnB,IAAI1F,EAAW0F,GACS,IAApBI,IACAqB,IAAmB,GAEvBxH,EAAUlB,KAAI,SAAAiH,GACV,GAAIA,EAASvK,OAAS6E,EAGlB,OAFAmH,IAAmB,QACnBI,GAAU7B,EAAS5J,QAkKHyH,cArDR,WAChB/F,GAAW,GACX1D,EAAMgF,KAAN,sBAA0BwI,GAA1B,UAA0C,CAAE,QAAU,GAAV,OAAcxL,IAAM,SAAW,GAAX,OAAemL,MAC1EzK,MAAK,SAAAC,GACFe,GAAW,GACXuJ,IAAiB,MAEpBrK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OA8CIY,QAASA,EACTuI,gBAAiBA,GACjBD,aAAcA,GACd7M,QApJZ,SAACkP,GACM,WAAfA,EACAhB,IAAkB,GACI,YAAfgB,GACPhB,IAAkB,QAkJN,sBAAK7O,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UAA0B,mBAAGA,UAAU,gBAAb,uBACtB,cAAC,IAAD,CACIkC,KAAM2C,IACN7D,QAASwO,QAEjB,sBAAKxP,UAAU,aAAf,UAA4B,mBAAGA,UAAU,kBAAb,yBACxB,cAAC,IAAD,CACIkC,KAAM4N,IACN9O,QAnFH,WACzB0N,IAAiB,eAuFD,KACY,IAAfpG,GAAmB,cAAC,GAAD,CAAOjB,UAAWwB,IAAa,KACnC,IAAfP,GAAmB,cAAC,GAAD,CAAOjB,UAAW2B,IAAY,cClVhE+G,GAAa3O,IAAMC,IAAI,cAiBd2O,GAbE,WACb,OAAkB,IAAfD,GACQ,cAAC,GAAD,IAGH,qBAAK/P,UAAU,WAAf,SACI,cAAC,GAAD,OCoFDiQ,G,4MAtFX7F,MAAQ,CACJxE,MAAO,GACPsK,SAAU,GACVnF,SAAS,EACT7F,SAAS,EACTiL,SAAS,G,EAGbtK,SAAW,SAACD,GACR,EAAK0E,SAAS,CAAE1E,MAAOA,K,EAG3BwK,YAAc,SAACF,GACX,EAAK5F,SAAS,CAAE4F,SAAUA,K,EAG9BG,aAAe,WACX,EAAK/F,SAAS,CAAEpF,SAAS,IACzBzD,EAAMgF,KAAK,gBAAiB,EAAK2D,OAC5BjG,MAAK,SAACC,GACH,EAAKkG,SAAS,CAAEpF,SAAS,IACzB,IAAMoL,EAASlM,EAAIxC,QACnBR,IAAMqO,IAAI,cAAc,GACxBrO,IAAMqO,IAAI,eAAgBa,EAAO,iBACjClP,IAAMqO,IAAI,SAAUa,EAAOhP,QAC3BF,IAAMqO,IAAI,MAAOa,EAAO/O,KACxBgP,EAAQhB,KAAK,CAACiB,SAAS,SAE1BnM,OAAM,SAACyH,GACJ,EAAKxB,SAAS,CAAEpF,SAAS,IACzB,EAAKoF,SAAS,CAAES,QAASe,EAAM2E,SAASxK,KAAKyK,a,EAIzDC,SAAW,WACP,EAAKN,gB,uDAKL,OAAmB,IADAjP,IAAMC,IAAI,cAElB,cAACuP,GAAD,IAGC,eAAC,EAAD,WACI,cAAC,IAAD,CACIC,WAAY,CAAC,SACbC,WAAY7Q,KAAK0Q,SAFrB,SAGI,qBAAK3Q,UAAU,yBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,qBACCC,KAAKmK,MAAMW,QAAU9K,KAAKmK,MAAMW,QAAQ3E,KAAI,SAAA2K,GAAG,OAAI,mBAAapN,MAAO,CAAExB,MAAO,MAAOgF,UAAW,UAA/C,SAA2D4J,GAAnDA,MAA+D,GAC1H9Q,KAAKC,MAAM8Q,aAAe,mBAAGrN,MAAO,CAAExB,MAAO,MAAOgF,UAAW,SAAW8J,UAAU,OAA1D,6CAAyG,GACpI,cAAC,EAAD,CAAOjR,UAAU,aAAaY,MAAM,QAAQC,KAAK,QAAQF,QAASV,KAAK4F,WACvE,cAAC,EAAD,CAAO7F,UAAU,WAAWY,MAAM,WAAWC,KAAK,WAAWF,QAASV,KAAKmQ,cAC3E,sBAAKpQ,UAAU,cAAf,UACI,cAAC,EAAD,CAAQA,UAAU,cAAckB,MAAM,UAAUD,QAAShB,KAAKoQ,eAC9D,cAAC,EAAD,CAAQrQ,UAAU,iBAAiBkB,MAAM,UAAUD,QAAShB,KAAKC,MAAMgR,2BAE1EjR,KAAKmK,MAAMlF,QAAU,qBAAKlF,UAAU,mBAAf,SAAkC,cAAC,EAAD,MAAoB,cAOhG,qBAAIA,UAAU,mBAAd,UACI,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,iC,GA/EJI,a,SCYTE,I,mNApBXC,cAAgB,SAACC,GACb,IAAIC,EAAQD,EAAEE,OAAOD,MACrB,EAAKP,MAAMS,QAAQF,I,uDAInB,OACI,cAAC,EAAD,UACI,qBAAKT,UAAU,QAAf,SACI,sBAAKA,UAAU,QAAf,UACI,gCAAQC,KAAKC,MAAMU,QAClBX,KAAKC,MAAM6K,QAAU,sBAAU,mBAAGpH,MAAO,CAACxB,MAAO,OAAlB,qCAChC,uBAAOtB,KAAMZ,KAAKC,MAAMW,KAAMC,SAAUb,KAAKM,2B,GAbjDH,cCMLW,I,OANA,SAACb,GAAD,OACX,cAAC,EAAD,UACI,wBAAQF,UAAWE,EAAMF,UAAWgB,QAASd,EAAMe,QAAS4M,SAAU3N,EAAM2N,SAA5E,SAAuF3N,EAAMgB,YC4HtFiQ,G,4MAxHX/G,MAAQ,CACJgH,UAAW,GACXC,SAAU,GACVzL,MAAO,GACPsK,SAAU,GACVoB,eAAe,EACfpM,SAAS,EACT6F,SAAS,EACT/D,MAAM,G,EAGVuK,aAAe,SAACH,GACZ,EAAK9G,SAAS,CAAE8G,UAAWA,K,EAG/BI,YAAc,SAACH,GACX,EAAK/G,SAAS,CAAE+G,SAAUA,K,EAG9BxL,SAAW,SAACD,GACR,EAAK0E,SAAS,CAAE1E,MAAOA,K,EAG3BwK,YAAc,SAACF,GACX,EAAK5F,SAAS,CAAE4F,SAAUA,K,EAG9BuB,aAAe,SAACvB,GACY,IAApBA,EAAStE,QACT,EAAKtB,SAAS,CAAEgH,cAAepB,IAAa,EAAK9F,MAAM8F,Y,EAI/DwB,gBAAkB,WAEd,GADA,EAAKpH,SAAS,CAAEpF,SAAS,IACrB,EAAKkF,MAAMkH,cAAe,CAC1B,IAAMrL,EAAO,CACTnD,KAAM,EAAKsH,MAAMgH,UAAY,EAAKhH,MAAMiH,SACxCzL,MAAO,EAAKwE,MAAMxE,MAClBsK,SAAU,EAAK9F,MAAM8F,UAGzBzO,EAAMgF,KAAK,QAASR,GACf9B,MAAK,SAACC,GACH,EAAKkG,SAAS,CAAEpF,SAAS,IACzB9D,IAAMqO,IAAI,sBAAsB,GAChC,EAAKnF,SAAS,CAAEtD,MAAM,IACtB,EAAK9G,MAAM8G,KAAK,EAAKoD,MAAMpD,SAE9B3C,OAAM,SAACyH,GACJ,EAAKxB,SAAS,CAAEpF,SAAS,IACzB,IAAM6F,EAAUe,EAAM2E,SAASxK,KAAKyK,OAAOiB,cACvCC,EAAOlF,OAAOkF,KAAK7G,GAClB3E,KAAI,SAAAyL,GAAK,OAAIC,OAAOD,MACpBzL,KAAI,SAAA2L,GAAC,oBAAQC,MAAMjH,EAAQgH,QAC3B1F,QAAO,SAAC4F,EAAK3F,GACV,OAAO2F,EAAIC,OAAO5F,MAErBlG,KAAI,SAAA2K,GAAG,OAAI,mBAAGa,KAAMb,EAAKpN,MAAO,CAAExB,MAAO,MAAOgF,UAAW,SAAU8J,UAAU,OAApE,SAA8EF,OAC9F,EAAKzG,SAAS,CAAES,QAAS6G,S,EAKzCO,SAAW,WACP,EAAKT,mB,uDAIL,OACI,eAAC,EAAD,WAEI,cAAC,IAAD,CACIb,WAAY,CAAC,SACbC,WAAY7Q,KAAKkS,SAFrB,SAGI,qBAAKnS,UAAU,yBAAf,SAEI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACA,oBAAIA,UAAU,QAAd,qBACI,sBAAKA,UAAU,eAAf,UAEI,cAAC,GAAD,CAAOA,UAAU,aAAaY,MAAM,aAAaC,KAAK,OAAOF,QAASV,KAAKsR,aAAcxG,SAAS,IAClG,cAAC,GAAD,CAAO/K,UAAU,aAAaY,MAAM,YAAYC,KAAK,OAAOF,QAASV,KAAKuR,YAAazG,SAAS,IAChG,cAAC,GAAD,CAAO/K,UAAU,aAAaY,MAAM,QAAQC,KAAK,QAAQF,QAASV,KAAK4F,SAAUkF,SAAS,IAC1F,cAAC,GAAD,CAAO/K,UAAU,OAAOY,MAAM,WAAWC,KAAK,WAAWF,QAASV,KAAKmQ,YAAarF,SAAS,IAC7F,cAAC,GAAD,CAAO/K,UAAU,eAAeY,MAAM,mBAAmBC,KAAK,WAAWF,QAASV,KAAKwR,aAAc1G,QAAS9K,KAAKmK,MAAMkH,gBACzH,sBAAKtR,UAAU,cAAf,UACI,cAAC,GAAD,CAAQA,UAAU,iBAAiBkB,MAAM,cAAcD,QAAShB,KAAKyR,kBACrE,iDAAmB,cAAC,GAAD,CAAQ1R,UAAU,cAAciB,QAAShB,KAAKC,MAAMkS,mBAAoBlR,MAAM,qBAGpGjB,KAAKmK,MAAMW,QACX9K,KAAKmK,MAAMlF,QAAU,qBAAKlF,UAAU,mBAAf,SAAkC,cAAC,EAAD,MAAoB,eAUhG,qBAAIA,UAAU,mBAAd,UACI,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,iC,GAlHOI,aCOZiS,GAXF,SAACnS,GAAD,OACT,qBAAKF,UAAU,OAAf,SACKE,EAAMsK,KAAO,cAAC,GAAD,CACE0G,sBAAuBhR,EAAMoS,iBAC7BtB,aAAc9Q,EAAMqS,aACtB,cAAC,GAAD,CACEH,mBAAoBlS,EAAMsS,cAC1BxL,KAAM9G,EAAMuS,wBCqCrBC,G,4MAzCXtI,MAAQ,CACJI,MAAM,EACNiI,oBAAoB,G,EAGxBE,wBAA0B,WACtB,EAAKrI,SAAS,CACVE,MAAM,K,EAIdoI,qBAAuB,WACnB,EAAKtI,SAAS,CACVE,MAAM,K,EAIdqI,UAAY,SAACC,GACNA,GACC,EAAKxI,SAAS,CACVE,MAAM,EACNiI,oBAAoB,K,uDAM5B,OACA,cAAC,EAAD,UACI,qBAAKzS,UAAU,UAAf,SACI,cAAC,GAAD,CAAMwK,KAAMvK,KAAKmK,MAAMI,KACjB8H,iBAAkBrS,KAAK0S,wBACvBH,cAAevS,KAAK2S,qBACpBH,mBAAoBxS,KAAK4S,UACzBN,WAAYtS,KAAKmK,MAAMqI,6B,GApCvBrS,aCeP2S,OAff,WAIQ,OAFe3R,IAAMC,IAAI,cAGd,cAACuP,GAAD,IAGP,cAAC,EAAD,UACI,cAAC,GAAD,OCIDoC,OAZf,WACE,OACM,qBAAKhT,UAAU,MAAf,SACE,cAAC,GAAD,OCEUiT,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1P,MAAK,SAAA2P,GACJA,EAAaC,gBAEd1P,OAAM,SAAAyH,GACLvH,QAAQuH,MAAMA,EAAMf,e","file":"static/js/main.181cd38a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Background.css';\nclass Background extends Component{\n    render(){\n        return(\n            <div className=\"Background\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Background;","\nconst aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport './Input.css';\nimport Aux from '../../../../../hoc/Axu';\n\nclass Input extends Component {\n    changeHandler = (e) => {\n        let value = e.target.value;\n        this.props.setData(value);\n    }\n\n    render(){\n        return(\n            <Aux>\n                <div className=\"Input\">\n                    <div className=\"Block\">\n                        <label>{this.props.label}</label>\n                        <input type={this.props.type} onChange={this.changeHandler}/>\n                </div>\n            </div>\n        </Aux>\n        )\n    }\n}\n\nexport default Input;","import React from 'react';\nimport Aux from '../../../../../hoc/Axu';\nimport './Button.css';\n\nconst button = (props) => (\n    <Aux>\n        <button className={props.className} onClick={props.clicked}>{props.title}</button>\n    </Aux>\n)\n\nexport default button;","import axios from 'axios';\nimport store from 'store';\n\nconst token = store.get(\"access_token\");\nconst client = store.get(\"client\");\nconst uid = store.get(\"uid\");\n\nconst instance = axios.create({\n    baseURL: 'https://herokutuan.herokuapp.com',\n    headers: {'Authorization':'Bearer ya29.a0AfH6SMC3w1tXe7lCUECmZhkZZ1tRIaeYTrcF1B9_Bk7PFJcfbuxds7nEqowZQNqBs4_JBrnA9a2dDuY_r58jnUl0zgtBUZz95iTKwlVhvVzWgpaJzsiqD7045KO-NdLCa1TT7ZhZcP6npf_Ofb_Y-fkN9ZVgGjG',\n              'uid':`${uid}`,\n              'access-token':`${token}`,\n              'client':`${client}`,\n              'Content-Type': 'application/json'}\n})\n\nexport default instance;","import React from 'react';\nimport Aux from '../../../hoc/Axu';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <Aux>\n        <div className=\"Spinner\"><div></div><div></div><div></div><div></div></div>\n    </Aux>\n)\n\nexport default spinner;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory({forceRefresh:true}); ","import React from 'react';\nimport './Item.css';\n\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst item = (props) => (\n    <Aux>\n        <div className=\"Item\" onClick={props.click}>\n        \n            <div className=\"Icon\">\n            <FontAwesomeIcon icon={props.icon} color={props.color}/>\n            </div>\n                <p className=\"Label\">{props.label}</p>\n                <p className=\"Number\">{props.number}</p>\n        </div>\n        \n    </Aux>\n)\n\nexport default item;","import React from 'react';\nimport './Logo.css';\nimport Aux from '../../../../hoc/Axu';\nimport LOGOIMAGE from '../../Main/LogoImage/LogoImage';\nconst logo = (props) => {\n    return(\n        <Aux>\n            <div className=\"Logo\" onClick={props.clickedLogo}>\n                <div className=\"text-icon-sidebar\">alinh'stodos</div>\n            </div>\n        </Aux>\n    )\n}\n\n\n\n\nexport default logo;","import React, { useEffect, useState } from 'react';\nimport './TodoMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faEdit, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from '../../../../axios/axios';\n\n\nfunction TodoMain(props) {\n\n    const [checked, setChecked] = useState(props.check);\n    const [changeTodo, setChangeTodo] = useState(false);\n    const [todoName, setTodoName] = useState(props.name);\n    const [todoNameTemporary, settodoNameTemporary] = useState(props.name);\n    const [del, setDelete] = useState(false);\n\n    useEffect(() => {\n        async function updateDone() {\n            await axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, { \"done\": `${checked}` });\n        }\n        updateDone();\n    }, [checked]);\n\n    const changeTodos = () => {\n        setChangeTodo(true);\n    }\n\n    const cancelChangeTodos = () => {\n        setChangeTodo(false);\n        settodoNameTemporary(todoName);\n    }\n\n    const submitChangeTodos = () => {\n        axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, { \"name\": `${todoNameTemporary}` })\n            .then(res => {\n                setChangeTodo(false);\n                setTodoName(todoNameTemporary);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        settodoNameTemporary(value);\n    }\n\n    const deleteTodos = () => {\n        axios.delete(`/task_lists/${props.tasklistId}/todos/${props.id}`)\n            .then(res => {\n                setDelete(true);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n\n\n    return (\n        <Aux>\n\n            {\n                del ? \"\" :\n                    <div className=\"TodoMain\">\n                        <div className=\"TodoMainCheckbox\">\n                            {changeTodo ? <input type=\"text\" value={todoNameTemporary} onChange={changeHandler} className=\"TodoCheck\" /> :\n                                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\" }}>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={checked}\n                                        onChange={() => setChecked(!checked)} \n                                        />\n                                    <label style={{ fontFamily: \"inherit\", fontWeight: \"100\"}}>{todoName}</label>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"TodoMainIcon\">\n                            {changeTodo ? <FontAwesomeIcon icon={faCheck} style={{ cursor: \"pointer\" }} onClick={submitChangeTodos} /> : <FontAwesomeIcon icon={faEdit} style={{ cursor: \"pointer\" }} onClick={changeTodos} />}\n                            {changeTodo ? <FontAwesomeIcon icon={faTimes} style={{ cursor: \"pointer\" }} onClick={cancelChangeTodos} /> : <FontAwesomeIcon icon={faTimes} style={{ cursor: \"pointer\" }} onClick={deleteTodos} />}\n                        </div>\n                    </div>\n            }\n        </Aux>\n    )\n}\n\nexport default TodoMain;","import React from 'react';\nimport './AddTodoMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction AddTodoMain(props) {\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n    \n    return (\n        <Aux>\n            <div className=\"AddTodoMain\">\n                <FontAwesomeIcon icon={faPlus} onClick={props.click} className=\"AddTodoMainBtn\"/>\n                <input className=\"inputAdd\" type=\"text\" placeholder=\"Add todo\" onChange={changeHandler} value={props.value}/>\n            </div>\n        </Aux>\n    )\n}\n\nexport default AddTodoMain;","import React, { useEffect, useState } from 'react';\nimport './TasklistMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport TodoMain from '../TodoMain/TodoMain';\nimport AddTodoMain from '../AddTodoMain/AddTodoMain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../../Welcome/Spinner/Spinner';\nimport todo from '../../SideBar/Project/Todos/Todo/Todo';\n\nfunction TaskListMain(props) {\n\n    const [todos, setTodos] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [taskListTemporary, setTaskListTemporary] = useState(props.name);\n    const [taskListName, setTaskListName] = useState(props.name);\n    const [changeTasklist, setChangeTasklist] = useState(false);\n    const [list, setList] = useState([]);\n    const [todoAddition, setTodoAddition] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [partner, setPartner] = useState(false);\n    const [sharePermission, setSharePermission] = useState(false);\n    const [partnerId, setPartnerId] = useState(\"\");\n    const [user, setUser] = useState([]);\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        setTaskListTemporary(value);\n    }\n\n\n    useEffect(() => {\n        async function fetchTodos() { \n            try {\n                const request = await axios.request(`/task_lists/${props.id}/todos`);\n                setTodos(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n         }\n        fetchTodos();\n    },[loading]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                setUser(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        fetchData();\n    },[])\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                const users = request.data;\n                users.map(user => {\n                    let id = user.id;\n                    if(id === props.user_id){\n                        setEmail(user.email);\n                    }\n                })\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, []);\n\n    const submitChangeHandler = ()  => {\n        axios.patch(`/task_lists/${props.id}`, {\"name\":`${taskListTemporary}`})\n        .then(res => {\n            setChangeTasklist(false);\n            setTaskListName(taskListTemporary);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const changeTaskListHandler = () => {\n        setChangeTasklist(true);\n    }\n\n    const cancelChangeTaskListHandler = (name) => {\n        setChangeTasklist(false);\n        setTaskListTemporary(taskListName);\n    }\n\n    const addTodoHandler = (id) => {\n        if(todoAddition === \"\"){\n            return;\n        }else{\n            setLoading(true);\n            axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todoAddition}`}))\n            .then(res => {\n                setTodoAddition(\"\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    return(\n        <Aux>\n            <div className=\"TaskListMain\">\n                <div className=\"TaskListMainName\">\n                    {changeTasklist ? <input type=\"text\" style={{opacity:\"1\"}} value={taskListTemporary} onChange={changeHandler}/> : <h2 style={{opacity: \"1\"}}>{taskListName}</h2> } \n                    \n                    <div className=\"TaskListMainNameIcon\" >\n                        {changeTasklist ? <FontAwesomeIcon icon={faCheck} onClick={submitChangeHandler}/> : <FontAwesomeIcon icon={faEdit} onClick={changeTaskListHandler}/>}\n                        {changeTasklist ? <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler}/> : <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler} style={{display:\"none\"}}/>}\n                        {changeTasklist ? <FontAwesomeIcon icon={faTimes} color=\"red\" style={{display:\"none\"}}/> : <FontAwesomeIcon icon={faTimes} onClick={props.clickDeleteBtn}/>}\n                    </div>\n                </div>\n                <di\n                v className=\"TodosMain\">\n                    {\n                        todos.map(todo => {\n                            return <TodoMain \n                                    check={todo.done}\n                                    name={todo.name}\n                                    id={todo.id + todo.name}\n                                    key={props.id}\n                                    tasklistId={props.id}/>\n                        })\n                    }\n                </di>\n                {props.edit ? (\n                <div>\n                <div>\n                    <AddTodoMain \n                        setData={setTodoAddition} \n                        click={() => addTodoHandler(props.id)}\n                        value={todoAddition}/>\n\n                </div>\n                <h6 style={{opacity:\"0\"}}>You do not have edit permission</h6>\n                </div>) : (\n                <div>\n                <div style={{opacity:\"0\"}}>\n                    <AddTodoMain \n                        setData={setTodoAddition} \n                        click={() => addTodoHandler(props.id)}\n                        value={todoAddition}/>\n                    <div className=\"DeleteBtn\" >\n                        <FontAwesomeIcon \n                            icon={faTrashAlt} \n                            color=\"red\" \n                            onClick={props.clickDeleteBtn}/>\n                    </div>\n                </div>\n                <h6 style={{opacity:\"1\"}}>You do not have edit permission</h6>\n                </div>)}\n                {props.user_id ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Shared by {email}</h6> : null}\n                {partner ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Sharing with {partner}</h6> : null}\n    \n            </div>\n        </Aux>  \n    )\n  }\n\nexport default TaskListMain;","import React, {useEffect, useState} from 'react';\nimport './Main.css';\nimport Aux from '../../../hoc/Axu';\nimport TaskListMain from './TasklistMain/TasklistMain';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from '../../../axios/axios';\n\n\n\nfunction Main(props){\n\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchTaskList(){\n            try {\n                const request = await axios.request('/task_lists');\n                setTasklist(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, [loading]);\n\n    useEffect(() => {\n        async function updateData() {\n            setTasklist(props.tasklists)\n        }\n        updateData();\n    }, [props.tasklists])\n\n    const deleteTasklistHandler = (id) => {\n        setLoading(true);\n        axios.delete(`/task_lists/${id}`)\n        .then(res => {\n            setLoading(false);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n\n    const list = taskLists.map(tasklist => {\n        return  <Col \n                    lg={3} \n                    key={tasklist.id}>\n                        \n                        <TaskListMain\n                            name={tasklist.name} \n                            id={tasklist.id} \n                            key={tasklist.id+tasklist.name}\n                            clickDeleteBtn={() => deleteTasklistHandler(tasklist.id)}\n                            edit={true}/>\n                </Col>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                {props.children}\n                <div className=\"TaskListArea\">\n                    <Row>\n                        {list}\n                    </Row>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './DisplayTaskList.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faPlus, faEdit} from '@fortawesome/free-solid-svg-icons';\n\nfunction DisplayTaskList (props) {\n\n    const tasklists = props.tasklists;\n\n    const tasklistDisplay = tasklists.map(tasklist => {\n        return (\n            <div className=\"SBTasklistView\">\n                <div style={{fontSize:\"8px\", marginRight: \"20px\"}}>\n                    <FontAwesomeIcon icon={faCircle} color=\"red\"/>\n                </div>\n                <p>{tasklist.name}</p>\n            </div>  \n        )\n    })\n\n    return(\n        <div className=\"SBTasklist\">\n            {tasklistDisplay}\n            <div className=\"SBAddBtn\" onClick={props.clicked}>\n                <div style={{fontSize:\"15px\", marginRight:\"15px\"}}>\n                    <FontAwesomeIcon icon={faPlus}/>\n                </div>\n                <p>Add new</p>\n            </div>\n        </div>\n    )\n}\n\nexport default DisplayTaskList;","import React, { Component, useState } from 'react';\nimport './SideBar.css';\nimport Aux from '../../../hoc/Axu';\nimport Item from './Item/Item';\nimport { faShare, faHeadphones, faBook } from '@fortawesome/free-solid-svg-icons';\nimport Logo from './Logo/Logo';\nimport TodoMain from '../Main/TodoMain/TodoMain';\nimport TaskListMain from '../Main/TasklistMain/TasklistMain';\nimport Main from '../Main/Main';\nimport DisplayTasklist from './DisplayTaskList/DisplayTaskList';\n\n\nclass SideBar extends Component {\n    \n    sideBar = controller => () => {\n        \n        let op1 = true;\n        let op2 = false;\n        let op3 = false;\n\n        if (controller === 0) {\n            op1 = true;\n            op2 = false;\n            op3 = false;\n        } else if (controller === 1) {\n            op1 = false;\n            op2 = true;\n            op3 = false;\n        } else {\n            op1 = false;\n            op2 = false;\n            op3 = true;\n        }\n\n    }\n\n\n    render() {\n        const { op1, op2, op3} = this.props;\n        return (\n            <Aux>\n                <div className=\"SideBar\">\n                    <div className=\"content\">\n                        <div className=\"sticky-content\">\n                            <Logo clickedLogo={this.props.clickedLogo} />\n                            {op1 ? <Item icon={faBook} label=\"Tasks\" number={this.props.tasklists} color=\"#fff\" click={this.props.clickTodo} /> : <Item icon={faBook} label=\"Tasks\" number={this.props.tasklists} color=\"white\" click={this.props.clickTodo} />}\n                            {op2 ? <Item icon={faHeadphones} label=\"Support\" number={this.props.shared} color=\"#fff\" click={this.clickInBox} /> : <Item icon={faHeadphones} label=\"Support\" number={this.props.shared} color=\"white\" click={this.props.clickInBox} />}\n                            {op3 ? <Item icon={faShare} label=\"Share\" number={this.props.share} color=\"#fff\" click={this.props.clickShare} /> : <Item icon={faShare} label=\"Share\" number={this.props.share} color=\"white\" click={this.props.clickShare} />}\n                            <br />\n                            <br />\n                            <hr style={{\n                                backgroundColor: '#000',\n                                border: '0.1px solid #000',\n                                margin: '0 auto',\n                                lineHeight: '0.2px',\n                                width: \"70%\"\n                            }} />\n                                    {/* {IdiomaticReactList} */}\n                            <DisplayTasklist \n                                tasklists={this.props.taskListItem}\n                                clicked={this.props.addTasklist}\n                                />\n                        </div>\n                    </div>\n                </div>\n            </Aux>\n\n        )\n    }   \n}\nconst IdiomaticReactList = (props) => {\n    return (\n      <div>\n        {props.items.map((item, index) => (\n          <div key={item} itemID={index}>{this.props.taskListName}</div>\n        ))}\n      </div>\n    ); \n}\nexport default SideBar","import React from 'react';\nimport './DropMenuItem.css';\nimport Aux from '../../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst dropMenuItem = (props) => (\n    <Aux>\n        <div className=\"DropMenuItem\" onClick={props.clicked}>\n            <FontAwesomeIcon icon={props.icon} />\n            <p>{props.label}</p>\n        </div>\n    </Aux>\n)\n\nexport default dropMenuItem;","import React from 'react';\nimport './DropMenu.css';\nimport Aux from '../../../../hoc/Axu';\nimport { faAddressCard, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport DropMenuItem from './DropMenuItem/DropMenuItem';\n\nconst dropMenu = (props) => (\n    <Aux>\n        <div className=\"DropMenu\">\n            <DropMenuItem label=\"Profile\" icon={faAddressCard}/>\n            <DropMenuItem label=\"Log Out\" icon={faSignOutAlt} clicked={props.clickedSignOutButton}/>\n        </div>\n    </Aux>\n)\n\nexport default dropMenu;","import React from 'react';\nimport './Search.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n\nconst search = (props) => (\n    <Aux>\n        <div className=\"Search\">\n                <FontAwesomeIcon icon={faSearch} color=\"black\"/>\n                <input type=\"text\" placeholder=\"Name of Tasklist...\"/>\n        </div>\n    </Aux>\n)\n\nexport default search;","import React from 'react';\nimport './SayHi.css';\nimport Aux from '../../../../hoc/Axu';\n\nconst sayHi = props => (\n    <Aux>\n        <div className=\"Sayhi\">\n            <div className=\"user\" onClick={props.clickedDropDown}>{props.name}</div>\n        </div>\n    </Aux>\n)\n\nexport default sayHi;","import React from 'react';\nimport './DrawToggle.css';\nimport Aux from '../../../../hoc/Axu';\n\nconst drawToggle = (props) => (\n    <Aux>\n        <div className=\"DrawerToggle\" onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </Aux>\n)\n\nexport default drawToggle;","import React, { Component } from 'react';\nimport './NavigationBar.css';\nimport Aux from '../../../hoc/Axu';\nimport DropMenu from './DropMenu/DropMenu';\nimport Search from './Search/Search';\nimport SayHi from './SayHi/SayHi';\nimport DrawToggle from './DrawToggle/DrawToggle';\n\nclass NavigationBar extends Component {\n    state = {\n        showDropMenu: false\n    }\n    showDropMenu = () => {\n        this.setState({\n            showDropMenu: !this.state.showDropMenu\n        });\n    }\n    render(){\n        return(\n            <Aux>\n                <div className=\"NavigationBar\">\n                    <DrawToggle/>\n                    <Search/>\n                    <span className=\"hi\">Hi, </span><SayHi clickedDropDown={this.showDropMenu}/>\n                    {this.state.showDropMenu ? <DropMenu clickedSignOutButton={this.props.clickedSignOutButton}/> : \"\"}\n                </div>\n            </Aux>\n        )\n    }\n\n}\n\n\n\n\nexport default NavigationBar;","import React from 'react';\nimport './Backdrop.css';\nimport Aux from '../../../hoc/Axu';\n\nconst backDrop = (props) => (\n    <Aux>\n        {props.show ? <div className=\"BackDrop\" onClick={props.cancel}></div> : null}\n    </Aux>\n)\n\nexport default backDrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Axu';\nimport BackDrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <BackDrop \n            show={props.show}\n            cancel={props.cancel}/>\n        <div \n        className=\"Modal\"\n        style={{transform: props.show ? 'translateY(0)': 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n)\n\nexport default modal;","import React from 'react';\nimport './InputTaskListArea.css';\nimport Aux from '../../../../hoc/Axu';\n\nfunction InputTaskListArea (props) {\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n    return (\n        <Aux>\n            <div className=\"InputTaskListArea\">\n                <label>{props.name}</label>\n                <input type=\"text\" onChange={changeHandler}/>\n            </div>\n        </Aux>\n    )\n\n}\n\n\n\nexport default InputTaskListArea;","import React from 'react';\nimport './SubmitButton.css';\n\nconst submitButton = (props) => (\n    <p className=\"AddButtonSubmit\" onClick={props.click}>Submit</p>\n\n)\n\nexport default submitButton;","import React from 'react';\nimport './AddTaskListPanel.css';\nimport Aux from '../../../hoc/Axu';\nimport InputTaskListArea from './InputTaskListArea/InputTaskListArea';\nimport SubmitButton from './SubmitButton/SubmitButton';\nimport Spinner from '../../Welcome/Spinner/Spinner';\n\nfunction AddTaskListPanel (props) {\n\n    return (\n        <Aux>\n            <div className=\"AddTaskListPanel\">\n                <h2>Add Task List</h2>\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\n                <InputTaskListArea name=\"TaskList\" setData={props.setTaskListName}/>\n                <InputTaskListArea name=\"Todo 1\" setData={props.setTodo1Name}/>\n                <InputTaskListArea name=\"Todo 2\" setData={props.setTodo2Name}/>\n                <SubmitButton click={props.submitHandler}/>\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\n            </div>\n        </Aux>\n    )\n}\n\nexport default AddTaskListPanel;","import React, {useEffect, useState} from 'react';\nimport Aux from '../../../hoc/Axu';\nimport TaskListMain from '../Main/TasklistMain/TasklistMain';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from '../../../axios/axios';\n\n\nfunction Inbox(props){\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n\n    useEffect(() => {\n        async function fetchData () {\n            try {\n                const request = await axios.request('/shared');\n                setTasklist(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const list = taskLists.map(tasklist => {\n        return <Col \n                    lg={3} \n                    key={tasklist.id}>\n                        <TaskListMain \n                            name={tasklist.name} \n                            id={tasklist.id} \n                            key={tasklist.id+tasklist.name}\n                            edit={tasklist.is_write}\n                            user_id={tasklist.user_id}/>\n                </Col>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                <div className=\"TaskListArea\">\n                    <Row>\n                        {list}\n                    </Row>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Inbox;","import React, { useEffect } from 'react';\nimport TodoMain from '../../../Main/TodoMain/TodoMain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport axios from '../../../../../axios/axios';\n\nfunction Row(props) {\n\n    const [write, setWrite] = useState(props.is_write);\n    const [dele, setDelete] = useState(false);\n    const [todos, setTodos] = useState([]);\n    const user = props.user;\n\n    useEffect(() => {\n        async function putData() {\n            try {\n                await axios.put(`/task_lists/${props.taskListId}/share/${props.user_id}`, {\"share_task\":{'is_write': `${write}`}});\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        putData();\n    },[write])\n\n    useEffect(() => {\n        async function fetchTodos() { \n            try {\n                const request = await axios.request(`/task_lists/${props.taskListId}/todos`);\n                setTodos(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n         }\n        fetchTodos();\n    },[props.taskListId]);\n\n    const deleteShare = () => {\n        try {\n            axios.delete(`task_lists/${props.taskListId}/share/${props.user_id}`);\n            setDelete(true);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    let task = (<div className=\"TaskListMain\" style={{width:\"250px\", margin:\"10px\"}}>\n    <div className=\"TaskListMainName\">\n        <h2>{props.name}  <span style={{color:\"black\", fontSize:\"10px\"}}>({todos.length})</span></h2>\n    </div>\n    <div className=\"TodosMain\">\n        {\n            todos.map(todo => {\n                return <TodoMain \n                        check={todo.done}\n                        name={todo.name}\n                        id={todo.id}\n                        key={props.id}\n                        tasklistId={props.id}/>\n            })\n        }\n    </div>\n    <span style={{color:\"red\", marginBottom:\"20px\"}}>{user[props.id]}</span>\n    <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-around\", width:\"150px\"}}>\n            <input \n                type=\"checkbox\"\n                checked={write}\n                onChange={() => setWrite(!write)}/>\n            <label style={{fontFamily: \"inherit\", fontWeight:\"100\"}}>Edit Permission</label>\n    </div>\n    <div className=\"DeleteBtn\">\n            <FontAwesomeIcon \n                icon={faTrashAlt} \n                color=\"red\" \n                onClick={deleteShare}/>\n    </div>\n</div>);\n    return (\n        dele ? null: task\n    )\n}\nexport default Row;","import React, {useEffect, useState} from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport axios from '../../../../axios/axios';\nimport Row from './Row/Row';\n\nfunction Tasklist(props) {\n\n    const [user, setUser] = useState({});\n    const [share, setShare] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request(`/task_lists/${props.id}/share`);\n                setShare(request.data);\n            } catch (error) {\n                console.log(error);   \n            }\n        }\n        fetchData();\n    },[])\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                const usersList = request.data;\n                const list = usersList.map(user => {\n                    let id = user.id;\n                    let email = user.email;\n                    const ob = {id: email};\n                    renameKey(ob, \"id\", id);\n                    return ob;\n                });\n                const users = list.reduce((ob, el) => {\n                    return {...ob, ...el}\n                });\n                setUser(users);\n            } catch (error) {\n                console.log(error); \n            }\n        }\n        fetchData();\n    },[])\n\n    const renameKey = (obj, old_key, new_key) => {    \n        // check if old key = new key   \n            if (old_key !== new_key) {                   \n               Object.defineProperty(obj, new_key, // modify old key \n                                    // fetch description from object \n               Object.getOwnPropertyDescriptor(obj, old_key)); \n               delete obj[old_key];                // delete old key \n               } \n        }\n\n        const row = share.map(s => {\n            return <Row\n                        key={s.user_id}\n                        user={user}\n                        id={s.user_id}\n                        taskListId={s.task_list_id}\n                        is_write={s.is_write}\n                        name={props.name}\n                        user_id={s.user_id}/>\n        }) \n\n    return (\n        <Aux>\n            <div style={{marginBottom:\"15px\", padding:\"10px\", display:'flex', overflow:\"scroll\", maxWidth:\"1200px\"}}> \n                {row}\n            </div>\n        </Aux>\n    )\n}\n\nexport default Tasklist;\n","import React, {useState} from 'react';\nimport Aux from '../../../hoc/Axu';\nimport TaskList from './Tasklist/Tasklist';\n\n\n\nfunction Share(props){\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n\n    const list = taskLists.reduce(taskList => {\n        return taskList;\n    })\n    \n    const lists = list.map(list => {\n        return <div\n                    key={list.id}>\n                        <TaskList\n                            name={list.name}\n                            id={list.id}\n                            key={list.id+list.name}/>\n                </div>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                <div className=\"TaskListArea\">\n                        {lists}\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Share;","import React from 'react';\nimport Aux from '../../../hoc/Axu';\nimport InputTaskListArea from '../AddTaskListPanel/InputTaskListArea/InputTaskListArea';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Spinner from '../../Welcome/Spinner/Spinner';\nimport \"./ShareTasklistPanel.css\";\n\nfunction ShareTasklistPanel(props) {\n\n    let submit = false;\n\n    const setPermission = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n\n    if(props.correctEmail && props.correctTaskList){\n        submit = true;\n    }\n\n    return(\n        <Aux>\n        <div className=\"AddTaskListPanel ShareTaskListPanel\">\n                <h2>Share Task List</h2>\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                    <InputTaskListArea name=\"User Email\" setData={props.setUserEmail}/>\n                    {props.correctEmail ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\n                </div>\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                    <InputTaskListArea name=\"TaskList Name\" setData={props.setTasklistName}/>\n                    {props.correctTaskList ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\n                </div>\n                <div style={{display:'flex', alignItems:\"center\", justifyContent:\"space-between\"}} onChange={setPermission.bind(this)}>\n                    <label>Edit Permission</label>\n                    <input type=\"radio\" value=\"editor\" name=\"name\"/>Editor\n                    <input type=\"radio\" value=\"watcher\" name=\"name\"/>Watcher\n                </div>\n                <button onClick={props.submitHandler} disabled={!submit} style={{width:\"30%\", padding:\"5px\", backgroundColor:\"#5cb85c\", color:\"white\", outline:\"none\", border:\"none\"}}>Submit</button>\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\n            </div>\n    </Aux>\n\n    )\n}\n\nexport default ShareTasklistPanel;","import React, { useState, useEffect } from 'react';\nimport './WorkPlace.css';\nimport Aux from '../../../hoc/Axu';\nimport SideBar from '../SideBar/SideBar';\nimport Main from '../Main/Main';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport store from 'store';\nimport history from '../../../history/history';\nimport Modal from '../Modal/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faShareSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTaskListPanel from '../AddTaskListPanel/AddTaskListPanel';\nimport axios from '../../../axios/axios';\nimport taskList from '../SideBar/Project/TaskList/TaskList';\nimport Inbox from '../Inbox/Inbox';\nimport Share from '../Share/Share';\nimport ShareTaskListPanel from '../ShareTasklistPanel/ShareTasklistPanel';\nimport AccountAction from '../../../containers/AccountAction/AccountAction';\n\nfunction WorkPlace(props) {\n\n    const [taskLists, setTaskLists] = useState([]);\n    const [message, setMessage] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tasklistName, setTasklistName] = useState(\"\");\n    const [todo1Name, setTodo1Name] = useState(\"\");\n    const [todo2Name, setTodo2Name] = useState(\"\");\n    const [showAddList, setShowAddList] = useState(false);\n    const [todoAddition, setTodoAddition] = useState(\"\");\n    const [shared, setShared] = useState([]);\n    const [share, setShare] = useState([]);\n    const [controller, setController] = useState(0);\n    const [showShareList, setShowShareList] = useState(false);\n    const [taskListName, setTaskListName] = useState(\"\");\n    const [id, setId] = useState(\"\");\n    const [editPermission, setEditPermission] = useState(false);\n    const [correctTaskList, setCorrectTaskList] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [correctEmail, setCorrectEmail] = useState(false);\n    const [taskId, setTaskId] = useState(\"\");\n    const [shareMessage, setShareMessage] = useState(false);\n    const [logoutAction, setLogoutAction] = useState(false);\n\n\n    useEffect(() => {\n        async function fetchTaskList() {\n            try {\n                const request = await axios.request('/task_lists');\n                setTaskLists(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, [loading]);\n\n    useEffect(() => {\n        async function fetchTaskList() {\n            try {\n                const request = await axios.request('/task_lists');\n                setTaskLists(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, []);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/task_lists');\n                const taskList = request.data;\n                const share = [];\n                taskList.map(taskList => {\n                    if (taskList.share_count !== 0) {\n                        let object = { id: taskList.id, name: taskList.name };\n                        share.push(object);\n                    }\n                })\n                setShare(share);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [loading]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/shared');\n                setShared(request.data)\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                setUsers(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const logout = () => {\n        store.set('isLoggedIn', false);\n        store.set('access_token', \"\");\n        store.set('uid', \"\");\n        store.set('client', \"\");\n        setLogoutAction(true);\n    };\n\n    const clickedLogo = () => {\n        \n    };\n\n    const clickTodoHandler = () => {\n        setController(0);\n    };\n\n    const clickInboxHandler = () => {\n        setController(1);\n    };\n\n    const clickShareHandler = () => {\n        setController(2);\n    };\n\n    const setTasklistsName = (taskList) => {\n        setTasklistName(taskList.trim());\n    }\n\n    const setTodo1 = (toDo1) => {\n        setTodo1Name(toDo1.trim());\n    }\n\n    const setTodo2 = (toDo2) => {\n        setTodo2Name(toDo2.trim());\n    }\n\n    const setTodo = (todo) => {\n        setTodoAddition(todo.trim());\n    }\n\n    const setTaskListId = (taskList) => {\n        let tasklist = taskList;\n        if (correctTaskList === true) {\n            setCorrectTaskList(false);\n        }\n        taskLists.map(taskList => {\n            if (taskList.name === tasklist) {\n                setCorrectTaskList(true);\n                setTaskId(taskList.id);\n                return;\n            }\n        })\n    }\n\n    const setUserEmail = (email) => {\n        if (correctEmail === true) {\n            setCorrectEmail(false);\n        }\n        users.map(user => {\n            if (user.email === email) {\n                setCorrectEmail(true);\n                setId(user.id);\n            }\n        })\n    }\n\n    const setEdit = (permission) => {\n        if (permission === \"editor\") {\n            setEditPermission(true);\n        } else if (permission === \"watcher\") {\n            setEditPermission(false);\n        }\n    }\n\n    const submitHandler = () => {\n        setLoading(true);\n        if (tasklistName === \"\") {\n            setMessage(true);\n            setLoading(false);\n        } else {\n            axios.post('/task_lists', JSON.stringify({ \"name\": `${tasklistName}` }))\n                .then(res => {\n                    const id = res.data.id;\n                    if (todo1Name === \"\") {\n                        if (todo2Name === \"\") {\n                            setLoading(false);\n                            setMessage(false);\n                            setShowAddList(false);\n                            return;\n                        } else {\n                            axios.post(`/task_lists/${id}/todos`, JSON.stringify({ \"name\": `${todo2Name}` }))\n                                .then(res => {\n                                    setLoading(false);\n                                    setMessage(false);\n                                    setShowAddList(false);\n                                })\n                                .catch(err => {\n                                    console.log(err);\n                                })\n                        }\n                    } else {\n                        axios.post(`/task_lists/${id}/todos`, JSON.stringify({ \"name\": `${todo1Name}` }))\n                            .then(res => {\n                                if (todo2Name === \"\") {\n                                    setLoading(false);\n                                    setMessage(false);\n                                    setShowAddList(false);\n                                    return;\n                                } else {\n                                    axios.post(`/task_lists/${id}/todos`, JSON.stringify({ \"name\": `${todo2Name}` }))\n                                        .then(res => {\n                                            setLoading(false);\n                                            setMessage(false);\n                                            setShowAddList(false);\n                                        })\n                                        .catch(err => {\n                                            console.log(err);\n                                        })\n                                }\n                            })\n                            .catch(err => {\n                                console.log(err);\n                            })\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n\n    }\n\n    const cancelAddTaskListHandler = () => {\n        setLoading(false);\n        setMessage(false);\n        setShowAddList(false);\n    }\n\n    const addTasklistHandler = () => {\n        setShowAddList(true);\n    }\n\n    const shareTasklistHandler = () => {\n        setShowShareList(true);\n    }\n\n    const cancelShareTaskListHandler = () => {\n        setLoading(false);\n        setMessage(false);\n        setShowShareList(false);\n        setCorrectTaskList(false);\n        setCorrectEmail(false);\n        setId(\"\");\n        setEditPermission(false);\n        setTaskId(\"\");\n    }\n\n    const submitShare = () => {\n        setLoading(true);\n        axios.post(`/task_lists/${taskId}/share`, { \"user_id\": `${id}`, \"is_write\": `${editPermission}` })\n            .then(res => {\n                setLoading(false);\n                setShowShareList(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n\n\n    return (\n        <Aux>\n            {logoutAction ? <AccountAction/> : \n            (\n                <div className=\"WorkPlace\">\n                <SideBar\n                    clickTodo={clickTodoHandler}\n                    clickInBox={clickInboxHandler}\n                    clickShare={clickShareHandler}\n                    tasklists={taskLists.length}\n                    share={share.length}\n                    shared={shared.length}\n                    controller={controller}\n                    clickedLogo={clickedLogo}\n                    taskListItem={taskLists}\n                    addTasklist={addTasklistHandler}\n                />\n                <div className=\"ActionArea\">\n                    <NavigationBar\n                        clickedSignOutButton={logout} />\n                    {controller === 0 ? (<Main\n                        tasklists={taskLists}>\n                        <Modal\n                            show={showAddList}\n                            cancel={cancelAddTaskListHandler}>\n                            <AddTaskListPanel\n                                setTaskListName={setTasklistsName}\n                                setTodo1Name={setTodo1}\n                                setTodo2Name={setTodo2}\n                                submitHandler={submitHandler}\n                                loading={loading}\n                                message={message} />\n                        </Modal>\n                        <Modal\n                            show={showShareList}\n                            cancel={cancelShareTaskListHandler}>\n                            <ShareTaskListPanel\n                                setUserEmail={setUserEmail}\n                                setTasklistName={setTaskListId}\n                                submitHandler={submitShare}\n                                loading={loading}\n                                correctTaskList={correctTaskList}\n                                correctEmail={correctEmail}\n                                setData={setEdit} />\n                        </Modal>\n                        <div className=\"TaskListOption\">\n                            <div className=\"addIconB\"><p className=\"icon-text-add\">Add todos</p>\n                                <FontAwesomeIcon\n                                    icon={faPlus}\n                                    onClick={addTasklistHandler} />\n                            </div>\n                            <div className=\"shareIconB\"><p className=\"icon-text-share\">Share todos</p>\n                                <FontAwesomeIcon\n                                    icon={faShareSquare}\n                                    onClick={shareTasklistHandler} />\n                            </div>\n\n                        </div>\n                    </Main>\n                    ) : null}\n                    {controller === 1 ? <Inbox tasklists={shared} /> : null}\n                    {controller === 2 ? <Share tasklists={share} /> : null}\n                </div>\n            </div>\n            )}\n        </Aux>\n    )\n}\n\nexport default WorkPlace;","import React from 'react';\nimport WorkPlace from '../HomePage/WorkPlace/WorkPlace';\nimport store from 'store';\nimport history from '../../history/history';\nimport AccountAction from '../../containers/AccountAction/AccountAction';\n\nconst isLoggedIn = store.get(\"isLoggedIn\");\n\n\n\nconst homePage = () => {\n    if(isLoggedIn === false){   \n        return <AccountAction/>\n    }else{\n        return(\n            <div className=\"HomePage\">\n                <WorkPlace/>\n            </div>\n            \n        )\n    }\n}\n\nexport default homePage;","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport Input from './Input/Input';\nimport './LoginForm.css';\nimport Button from './Button/Button';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../Spinner/Spinner';\nimport store from 'store';\nimport { withRouter } from 'react-router-dom';\nimport history from '../../../../history/history';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport HomePage from '../../../HomePage/HomePage';\n\nclass LoginForm extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        message: false,\n        loading: false,\n        logined: false\n    }\n\n    setEmail = (email) => {\n        this.setState({ email: email });\n    }\n\n    setPassword = (password) => {\n        this.setState({ password: password });\n    }\n\n    loginHandler = () => {\n        this.setState({ loading: true });\n        axios.post('/auth/sign_in', this.state)\n            .then((res) => {\n                this.setState({ loading: false });\n                const header = res.headers;\n                store.set('isLoggedIn', true);\n                store.set('access_token', header['access-token']);\n                store.set('client', header.client);\n                store.set('uid', header.uid);\n                history.push({pathname:'/'});\n            })\n            .catch((error) => {\n                this.setState({ loading: false });\n                this.setState({ message: error.response.data.errors });\n            })\n    }\n\n    keyPress = () => {\n        this.loginHandler();\n    }\n\n    render() {\n        const isLoggedIn = store.get(\"isLoggedIn\");\n        if (isLoggedIn === true) {\n            return <HomePage/>\n        }else{\n                return (\n                    <Aux>\n                        <KeyboardEventHandler\n                            handleKeys={['enter']}\n                            onKeyEvent={this.keyPress}>\n                            <div className=\"main-w3layouts wrapper\">\n                                <div className=\"main-agileinfo\">\n                                    <div className=\"agileits-top\">\n                                        <div className=\"LoginForm\">\n                                            <h2 className=\"Title\">Sign In</h2>\n                                            {this.state.message ? this.state.message.map(mes => <p key={mes} style={{ color: \"red\", textAlign: \"center\"}}>{mes}</p>) : \"\"}\n                                            {this.props.isRegistered ? <p style={{ color: \"red\", textAlign: \"center\" , marginTop:\"3px\" }}>You had signed up successfully!</p> : \"\"}\n                                            <Input className=\"text email\" label=\"Email\" type=\"email\" setData={this.setEmail} />\n                                            <Input className=\"password\" label=\"Password\" type=\"password\" setData={this.setPassword} />\n                                            <div className=\"ButtonGroup\">\n                                                <Button className=\"LoginButton\" title=\"Sign In\" clicked={this.loginHandler} />\n                                                <Button className=\"RegisterButton\" title=\"Sign Up\" clicked={this.props.clickedRegisterButton} />\n                                            </div>\n                                            {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner /></div> : \"\"}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n        \n                        </KeyboardEventHandler>\n                        <ul className=\"colorlib-bubbles\">\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                        </ul>\n                    </Aux>\n                )\n        }\n        \n    }\n}\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport './Input.css';\nimport Aux from '../../../../../hoc/Axu';\n\nclass Input extends Component{\n    changeHandler = (e) => {\n        let value = e.target.value;\n        this.props.setData(value);\n    }\n\n    render(){\n        return(\n            <Aux>\n                <div className=\"Input\">\n                    <div className=\"Block\">\n                        <label>{this.props.label}</label>\n                        {this.props.message ? <p></p> : <p style={{color: 'red'}}>Password does not match</p>}\n                        <input type={this.props.type} onChange={this.changeHandler}/>\n                </div>\n            </div>\n    </Aux>\n        )\n    }\n}\n\nexport default Input;","import React from 'react';\nimport Aux from '../../../../../hoc/Axu';\nimport './Button.css';\n\nconst button = (props) => (\n    <Aux>\n        <button className={props.className} onClick={props.clicked} disabled={props.disabled}>{props.title}</button>\n    </Aux>\n)\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport Input from './Input/Input';\nimport Button from './Button/Button';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../Spinner/Spinner';\nimport store from 'store';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass RegisterForm extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        rightPassword: true,\n        loading: false,\n        message: false,\n        done: false\n    }\n\n    setFirstname = (firstName) => {\n        this.setState({ firstName: firstName })\n    }\n\n    setLastname = (lastName) => {\n        this.setState({ lastName: lastName });\n    }\n\n    setEmail = (email) => {\n        this.setState({ email: email });\n    }\n\n    setPassword = (password) => {\n        this.setState({ password: password });\n    }\n\n    checkConfirm = (password) => {\n        if (password.length !== 0) {\n            this.setState({ rightPassword: password === this.state.password });\n        }\n    }\n\n    registerHandler = () => {\n        this.setState({ loading: true });\n        if (this.state.rightPassword) {\n            const data = {\n                name: this.state.firstName + this.state.lastName,\n                email: this.state.email,\n                password: this.state.password\n            }\n\n            axios.post('/auth', data)\n                .then((res) => {\n                    this.setState({ loading: false });\n                    store.set('successfulRegister', true);\n                    this.setState({ done: true });\n                    this.props.done(this.state.done);\n                })\n                .catch((error) => {\n                    this.setState({ loading: false });\n                    const message = error.response.data.errors.full_messages;\n                    let keys = Object.keys(message)\n                        .map(iKeys => Number(iKeys))\n                        .map(i => [...Array(message[i])])\n                        .reduce((arr, el) => {\n                            return arr.concat(el)\n                        })\n                        .map(mes => <p keys={mes} style={{ color: \"red\", textAlign: \"center\", marginTop:\"3px\" }}>{mes}</p>)\n                    this.setState({ message: keys })\n                })\n        }\n    }\n\n    pressKey = () => {\n        this.registerHandler();\n    }\n\n    render() {\n        return (\n            <Aux>\n\n                <KeyboardEventHandler\n                    handleKeys={['enter']}\n                    onKeyEvent={this.pressKey}>\n                    <div className=\"main-w3layouts wrapper\">\n                        \n                        <div className=\"main-agileinfo\">\n                            <div className=\"agileits-top\">\n                            <h2 className=\"Title\">Sign Up</h2>\n                                <div className=\"RegisterForm\">\n                                    \n                                    <Input className=\"text email\" label=\"First Name\" type=\"text\" setData={this.setFirstname} message={true} />\n                                    <Input className=\"text email\" label=\"Last Name\" type=\"text\" setData={this.setLastname} message={true} />\n                                    <Input className=\"text email\" label=\"Email\" type=\"email\" setData={this.setEmail} message={true} />\n                                    <Input className=\"text\" label=\"Password\" type=\"password\" setData={this.setPassword} message={true} />\n                                    <Input className=\"text w3lpass\" label=\"Confirm Password\" type=\"password\" setData={this.checkConfirm} message={this.state.rightPassword} />\n                                    <div className=\"ButtonGroup\">\n                                        <Button className=\"RegisterButton\" title=\"Sign Up Now\" clicked={this.registerHandler} />\n                                        <p>Have an Account?<Button className=\"LoginButton\" clicked={this.props.clickedLoginButton} title=\"Login now!\" /></p>\n                                        \n                                    </div>\n                                    {this.state.message}\n                                    {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner /></div> : \"\"}\n                                </div>\n                                \n                            </div>\n\n                        </div>\n                    </div>\n                    \n                </KeyboardEventHandler>\n                \n                <ul className=\"colorlib-bubbles\">\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                </ul>\n            </Aux>\n        )\n    }\n}\n\nexport default RegisterForm;","import React from 'react';\nimport './Main.css';\nimport LoginForm from './LoginForm/LoginForm';\nimport RegisterForm from './RegisterForm/RegisterForm';\n\nconst main = (props) => (\n    <div className=\"Main\">\n        {props.show ? <LoginForm \n                        clickedRegisterButton={props.showRegisterForm} \n                        isRegistered={props.registered}/> : \n                      <RegisterForm \n                        clickedLoginButton={props.showLoginForm}\n                        done={props.successfulRegister}/>}\n    </div>\n)\n\nexport default main;","  \nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Axu';\nimport \"./Welcome.css\";\nimport Main from './Main/Main';\n\nclass Welcome extends Component {\n\n    state = {\n        show: true,\n        successfulRegister: false\n    }\n\n    showRegisterFormHandler = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    showLoginFormHandler = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    loginStep = (successful) => {\n        if(successful){\n            this.setState({\n                show: true,\n                successfulRegister: true\n            })\n        }\n    }\n\n    render() {\n        return(\n        <Aux>\n            <div className=\"Welcome\">\n                <Main show={this.state.show} \n                      showRegisterForm={this.showRegisterFormHandler} \n                      showLoginForm={this.showLoginFormHandler}\n                      successfulRegister={this.loginStep}\n                      registered={this.state.successfulRegister}/>\n        \n            </div>\n        </Aux>)\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport Background from '../Background/Background';\nimport Welcome from '../../components/Welcome/Welcome';\nimport store from 'store';\nimport HomePage from '../../components/HomePage/HomePage';\n\nfunction AccountAction (){\n\n    const isLoggedIn = store.get(\"isLoggedIn\");\n\n        if (isLoggedIn){\n            return <HomePage/>\n        }else{\n            return(\n            <Background>\n                <Welcome/>\n            </Background>\n            ) \n        }\n}\n\nexport default AccountAction;","import React from 'react';\nimport './App.css';\nimport AccountAction from './containers/AccountAction/AccountAction';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport history from './history/history';\n\nfunction App() {\n  return (\n        <div className=\"App\">\n          <AccountAction/>\n        </div>\n\n  );\n\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}